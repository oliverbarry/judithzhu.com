{"version":3,"sources":["../../src/index.js","../../src/utils/isBrowser.js","../../src/utils/debounce.js","../../src/utils/isFunction.js","../../src/utils/getStyleComputedProperty.js","../../src/utils/getParentNode.js","../../src/utils/getScrollParent.js","../../src/utils/getReferenceNode.js","../../src/utils/isIE.js","../../src/utils/getOffsetParent.js","../../src/utils/isOffsetContainer.js","../../src/utils/getRoot.js","../../src/utils/findCommonOffsetParent.js","../../src/utils/getScroll.js","../../src/utils/includeScroll.js","../../src/utils/getBordersSize.js","../../src/utils/getWindowSizes.js","../../src/utils/getClientRect.js","../../src/utils/getBoundingClientRect.js","../../src/utils/getOffsetRectRelativeToArbitraryNode.js","../../src/utils/getViewportOffsetRectRelativeToArtbitraryNode.js","../../src/utils/isFixed.js","../../src/utils/getFixedPositionOffsetParent.js","../../src/utils/getBoundaries.js","../../src/utils/computeAutoPlacement.js","../../src/utils/getReferenceOffsets.js","../../src/utils/getOuterSizes.js","../../src/utils/getOppositePlacement.js","../../src/utils/getPopperOffsets.js","../../src/utils/find.js","../../src/utils/findIndex.js","../../src/utils/runModifiers.js","../../src/methods/update.js","../../src/utils/isModifierEnabled.js","../../src/utils/getSupportedPropertyName.js","../../src/methods/destroy.js","../../src/utils/getWindow.js","../../src/utils/setupEventListeners.js","../../src/methods/enableEventListeners.js","../../src/utils/removeEventListeners.js","../../src/methods/disableEventListeners.js","../../src/utils/isNumeric.js","../../src/utils/setStyles.js","../../src/utils/setAttributes.js","../../src/modifiers/applyStyle.js","../../src/utils/getRoundedOffsets.js","../../src/modifiers/computeStyle.js","../../src/utils/isModifierRequired.js","../../src/modifiers/arrow.js","../../src/utils/getOppositeVariation.js","../../src/methods/placements.js","../../src/utils/clockwise.js","../../src/modifiers/flip.js","../../src/modifiers/keepTogether.js","../../src/modifiers/offset.js","../../src/modifiers/preventOverflow.js","../../src/modifiers/shift.js","../../src/modifiers/hide.js","../../src/modifiers/inner.js","../../src/modifiers/index.js","../../src/methods/defaults.js","../../src/js/index.js","../../src/js/browser.js","../../src/js/defaults.js","../../src/js/selectors.js","../../src/js/ponyfills.js","../../src/js/constants.js","../../src/js/popper.js","../../src/js/utils.js","../../src/js/bindGlobalEventListeners.js","../../src/js/reference.js","../../src/js/props.js","../../src/js/deprecated_computeArrowTransform.js","../../src/js/createTippy.js","src/setupAboutSvg.js","src/setupAboutLinks.js","about.js"],"names":["Defaults","window","document","navigator","timeoutDuration","longerTimeoutBrowsers","i","length","isBrowser","userAgent","indexOf","microtaskDebounce","fn","called","Promise","resolve","then","taskDebounce","scheduled","supportsMicroTasks","isFunction","functionToCheck","toString","call","getStyleComputedProperty","element","property","nodeType","css","ownerDocument","defaultView","getComputedStyle","getParentNode","nodeName","parentNode","host","getScrollParent","body","overflow","overflowX","overflowY","test","getReferenceNode","reference","referenceNode","isIE11","MSInputMethodContext","documentMode","isIE10","isIE","version","getOffsetParent","documentElement","offsetParent","noOffsetParent","nextElementSibling","isOffsetContainer","firstElementChild","getRoot","node","findCommonOffsetParent","element1","element2","order","compareDocumentPosition","Node","DOCUMENT_POSITION_FOLLOWING","start","end","range","createRange","setStart","setEnd","commonAncestorContainer","contains","element1root","getScroll","side","upperSide","html","scrollingElement","includeScroll","rect","subtract","scrollTop","scrollLeft","modifier","top","bottom","left","right","getBordersSize","styles","axis","sideA","sideB","parseFloat","getSize","computedStyle","Math","max","parseInt","getWindowSizes","getClientRect","offsets","width","height","getBoundingClientRect","e","result","sizes","clientWidth","clientHeight","horizScrollbar","offsetWidth","vertScrollbar","offsetHeight","getOffsetRectRelativeToArbitraryNode","children","parent","fixedPosition","runIsIE","isHTML","childrenRect","parentRect","scrollParent","borderTopWidth","borderLeftWidth","marginTop","marginLeft","getViewportOffsetRectRelativeToArtbitraryNode","excludeScroll","relativeOffset","innerWidth","innerHeight","isFixed","getFixedPositionOffsetParent","parentElement","el","getBoundaries","popper","padding","boundariesElement","boundaries","boundariesNode","isPaddingNumber","getArea","computeAutoPlacement","placement","refRect","rects","sortedAreas","Object","keys","map","key","sort","a","b","area","filteredAreas","filter","computedPlacement","variation","split","getReferenceOffsets","state","getOuterSizes","x","marginBottom","y","marginRight","getOppositePlacement","hash","replace","matched","getPopperOffsets","referenceOffsets","popperRect","popperOffsets","isHoriz","mainSide","secondarySide","measurement","secondaryMeasurement","find","arr","check","Array","prototype","findIndex","prop","value","cur","match","obj","runModifiers","modifiers","data","ends","undefined","slice","forEach","warn","enabled","update","isDestroyed","options","positionFixed","flip","originalPlacement","position","isCreated","onUpdate","onCreate","isModifierEnabled","modifierName","some","name","getSupportedPropertyName","prefixes","upperProp","charAt","toUpperCase","prefix","toCheck","style","destroy","removeAttribute","willChange","disableEventListeners","removeOnDestroy","removeChild","getWindow","attachToScrollParents","event","callback","scrollParents","isBody","target","addEventListener","passive","push","setupEventListeners","updateBound","scrollElement","eventsEnabled","enableEventListeners","scheduleUpdate","removeEventListeners","removeEventListener","isNumeric","n","isNaN","isFinite","setStyles","unit","setAttributes","attributes","setAttribute","applyStyle","instance","arrowElement","arrowStyles","applyStyleOnLoad","modifierOptions","getRoundedOffsets","shouldRound","round","floor","noRound","v","referenceWidth","popperWidth","isVertical","isVariation","horizontalToInteger","verticalToInteger","isFirefox","computeStyle","legacyGpuAccelerationOption","gpuAcceleration","offsetParentRect","devicePixelRatio","prefixedProperty","invertTop","invertLeft","arrow","isModifierRequired","requestingName","requestedName","requesting","isRequired","requested","querySelector","len","sideCapitalized","toLowerCase","altSide","opSide","arrowElementSize","center","popperMarginSide","popperBorderSide","sideValue","min","getOppositeVariation","validPlacements","placements","clockwise","counter","index","concat","reverse","BEHAVIORS","flipped","placementOpposite","flipOrder","behavior","FLIP","CLOCKWISE","COUNTERCLOCKWISE","step","refOffsets","overlapsRef","overflowsLeft","overflowsRight","overflowsTop","overflowsBottom","overflowsBoundaries","flippedVariationByRef","flipVariations","flippedVariationByContent","flipVariationsByContent","flippedVariation","keepTogether","toValue","str","size","parseOffset","offset","basePlacement","useHeight","fragments","frag","trim","divider","search","splitRegex","ops","op","mergeWithPrevious","reduce","index2","preventOverflow","transformProp","popperStyles","transform","priority","escapeWithReference","shift","shiftvariation","shiftOffsets","hide","bound","inner","subtractLength","Popper","requestAnimationFrame","debounce","bind","jquery","onLoad","Utils","global","PopperUtils","nav","win","isIOS","platform","MSStream","supportsTouch","POPPER_INSTANCE_RELATED_PROPS","elementProto","Element","matches","matchesSelector","webkitMatchesSelector","mozMatchesSelector","msMatchesSelector","arrayFrom","closest","parentSelector","selector","closestCallback","PASSIVE","FF_EXTENSION_TRICK","div","createElement","setInnerHTML","setContent","contentEl","props","content","appendChild","allowHTML","getChildren","Selectors","TOOLTIP","BACKDROP","CONTENT","ARROW","ROUND_ARROW","addInertia","tooltip","removeInertia","createArrowElement","arrowType","className","createBackdropElement","backdrop","addInteractive","removeInteractive","applyTransitionDuration","els","transitionDuration","toggleTransitionEndListener","action","listener","getPopperPlacement","fullPlacement","getAttribute","setVisibilityState","reflow","createPopperElement","id","zIndex","maxWidth","animation","theme","classList","add","t","interactive","animateFill","inertia","relatedTarget","_tippy","shouldPopperHideOnBlur","updatePopperElement","prevProps","nextProps","replaceChild","remove","afterPopperPositionUpdates","popperInstance","hideAllPoppers","tippyInstanceToExclude","querySelectorAll","POPPER","tip","hideOnClick","isCursorOutsideInteractiveBorder","popperPlacement","clientX","clientY","interactiveBorder","distance","exceedsTop","exceedsBottom","exceedsLeft","exceedsRight","getOffsetDistanceInPx","defaultDistance","isPlainObject","hasOwnProperty","getArrayOfElements","NodeList","isArray","getValue","defaultValue","focus","scrollX","pageXOffset","scrollY","pageYOffset","defer","ms","timeoutId","setTimeout","apply","arguments","getModifier","includes","isUsingTouch","onDocumentTouch","performance","onDocumentMouseMove","lastMouseMoveTime","now","onDocumentClick","isClickTrigger","trigger","clearDelayTimeouts","onWindowBlur","activeElement","blur","onWindowResize","tippyInstance","livePlacement","bindGlobalEventListeners","maxTouchPoints","msMaxTouchPoints","canReceiveFocus","hasAttribute","getDataAttributeOptions","acc","valueAsString","Number","JSON","parse","polyfillElementPrototypeProperties","virtualReference","polyfills","classNames","evaluateProps","out","appendTo","validateOptions","defaults","option","Error","TRANSFORM_NUMBER_RE","transformAxisBasedOnPlacement","transformNumbersBasedOnPlacement","type","numbers","isReverse","getTransformAxis","cssFunction","RegExp","getTransformNumbers","regex","computeArrowTransform","arrowTransform","translate","scale","computedTransform","idCounter","createTippy","collectionProps","multiple","popperMutationObserver","lastTriggerEvent","lastMouseMoveEvent","showTimeoutId","hideTimeoutId","isPreparingToShow","transitionEndListener","listeners","referenceJustProgrammaticallyFocused","debouncedOnMouseMove","interactiveDebounce","onMouseMove","isVisible","popperChildren","enable","isEnabled","disable","onReferenceClick","lazy","createPopperInstance","showOnInit","a11y","positionVirtualReferenceNearCursor","isVerticalPlacement","isHorizontalPlacement","followCursor","isHorizontal","prepareShow","createDelegateChildTippy","targetEl","wait","hasFollowCursorBehavior","isMounted","delay","prepareHide","removeFollowCursorListener","cleanupOldMouseListeners","onTrigger","isEventListenerStopped","referenceTheCursorIsOver","isCursorOverPopper","isCursorOverReference","onMouseLeave","onBlur","onDelegateShow","onDelegateHide","isTouchEvent","caseA","touchHold","caseB","popperOptions","boundary","flipBehavior","mount","MutationObserver","observe","margin","onMount","onTransitionEnd","duration","on","eventType","handler","addTriggersToReference","removeTriggersFromReference","set","show","touch","isVirtual","onShow","visibility","transitionDelay","sticky","updateDuration","updatePosition","onTransitionedIn","autoFocus","aria","onShown","isShown","onHide","onTransitionedOut","onHidden","destroyTargetInstances","child","disconnect","globalEventListenersBound","tippy","targets","one","references","firstReference","instances","collection","setDefaults","partialDefaults","disableAnimations","useCapture","autoInit","_back","_interopRequireDefault","require","__esModule","default","_default","exports","innerHTML","aboutmeSvg","link","outboundLink","open","_setupAboutSvg","_setupAboutLinks","setupSvg","setupAboutLinks"],"mappings":"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","file":"about.73bdc2ad.js","sourceRoot":"..","sourcesContent":["// Utils\nimport debounce from './utils/debounce';\nimport isFunction from './utils/isFunction';\n\n// Methods\nimport update from './methods/update';\nimport destroy from './methods/destroy';\nimport enableEventListeners from './methods/enableEventListeners';\nimport disableEventListeners from './methods/disableEventListeners';\nimport Defaults from './methods/defaults';\nimport placements from './methods/placements';\n\nexport default class Popper {\n  /**\n   * Creates a new Popper.js instance.\n   * @class Popper\n   * @param {Element|referenceObject} reference - The reference element used to position the popper\n   * @param {Element} popper - The HTML / XML element used as the popper\n   * @param {Object} options - Your custom options to override the ones defined in [Defaults](#defaults)\n   * @return {Object} instance - The generated Popper.js instance\n   */\n  constructor(reference, popper, options = {}) {\n    // make update() debounced, so that it only runs at most once-per-tick\n    this.update = debounce(this.update.bind(this));\n\n    // with {} we create a new object with the options inside it\n    this.options = { ...Popper.Defaults, ...options };\n\n    // init state\n    this.state = {\n      isDestroyed: false,\n      isCreated: false,\n      scrollParents: [],\n    };\n\n    // get reference and popper elements (allow jQuery wrappers)\n    this.reference = reference && reference.jquery ? reference[0] : reference;\n    this.popper = popper && popper.jquery ? popper[0] : popper;\n\n    // Deep merge modifiers options\n    this.options.modifiers = {};\n    Object.keys({\n      ...Popper.Defaults.modifiers,\n      ...options.modifiers,\n    }).forEach(name => {\n      this.options.modifiers[name] = {\n        // If it's a built-in modifier, use it as base\n        ...(Popper.Defaults.modifiers[name] || {}),\n        // If there are custom options, override and merge with default ones\n        ...(options.modifiers ? options.modifiers[name] : {}),\n      };\n    });\n\n    // Refactoring modifiers' list (Object => Array)\n    this.modifiers = Object.keys(this.options.modifiers)\n      .map(name => ({\n        name,\n        ...this.options.modifiers[name],\n      }))\n      // sort the modifiers by order\n      .sort((a, b) => a.order - b.order);\n\n    // modifiers have the ability to execute arbitrary code when Popper.js get inited\n    // such code is executed in the same order of its modifier\n    // they could add new properties to their options configuration\n    // BE AWARE: don't add options to `options.modifiers.name` but to `modifierOptions`!\n    this.modifiers.forEach(modifierOptions => {\n      if (modifierOptions.enabled && isFunction(modifierOptions.onLoad)) {\n        modifierOptions.onLoad(\n          this.reference,\n          this.popper,\n          this.options,\n          modifierOptions,\n          this.state\n        );\n      }\n    });\n\n    // fire the first update to position the popper in the right place\n    this.update();\n\n    const eventsEnabled = this.options.eventsEnabled;\n    if (eventsEnabled) {\n      // setup event listeners, they will take care of update the position in specific situations\n      this.enableEventListeners();\n    }\n\n    this.state.eventsEnabled = eventsEnabled;\n  }\n\n  // We can't use class properties because they don't get listed in the\n  // class prototype and break stuff like Sinon stubs\n  update() {\n    return update.call(this);\n  }\n  destroy() {\n    return destroy.call(this);\n  }\n  enableEventListeners() {\n    return enableEventListeners.call(this);\n  }\n  disableEventListeners() {\n    return disableEventListeners.call(this);\n  }\n\n  /**\n   * Schedules an update. It will run on the next UI update available.\n   * @method scheduleUpdate\n   * @memberof Popper\n   */\n  scheduleUpdate = () => requestAnimationFrame(this.update);\n\n  /**\n   * Collection of utilities useful when writing custom modifiers.\n   * Starting from version 1.7, this method is available only if you\n   * include `popper-utils.js` before `popper.js`.\n   *\n   * **DEPRECATION**: This way to access PopperUtils is deprecated\n   * and will be removed in v2! Use the PopperUtils module directly instead.\n   * Due to the high instability of the methods contained in Utils, we can't\n   * guarantee them to follow semver. Use them at your own risk!\n   * @static\n   * @private\n   * @type {Object}\n   * @deprecated since version 1.8\n   * @member Utils\n   * @memberof Popper\n   */\n  static Utils = (typeof window !== 'undefined' ? window : global).PopperUtils;\n\n  static placements = placements;\n\n  static Defaults = Defaults;\n}\n\n/**\n * The `referenceObject` is an object that provides an interface compatible with Popper.js\n * and lets you use it as replacement of a real DOM node.<br />\n * You can use this method to position a popper relatively to a set of coordinates\n * in case you don't have a DOM node to use as reference.\n *\n * ```\n * new Popper(referenceObject, popperNode);\n * ```\n *\n * NB: This feature isn't supported in Internet Explorer 10.\n * @name referenceObject\n * @property {Function} data.getBoundingClientRect\n * A function that returns a set of coordinates compatible with the native `getBoundingClientRect` method.\n * @property {number} data.clientWidth\n * An ES6 getter that will return the width of the virtual reference element.\n * @property {number} data.clientHeight\n * An ES6 getter that will return the height of the virtual reference element.\n */\n","export default typeof window !== 'undefined' && typeof document !== 'undefined' && typeof navigator !== 'undefined';\n","import isBrowser from './isBrowser';\n\nconst timeoutDuration = (function(){\n  const longerTimeoutBrowsers = ['Edge', 'Trident', 'Firefox'];\n  for (let i = 0; i < longerTimeoutBrowsers.length; i += 1) {\n    if (isBrowser && navigator.userAgent.indexOf(longerTimeoutBrowsers[i]) >= 0) {\n      return 1;\n    }\n  }\n  return 0;\n}());\n\nexport function microtaskDebounce(fn) {\n  let called = false\n  return () => {\n    if (called) {\n      return\n    }\n    called = true\n    window.Promise.resolve().then(() => {\n      called = false\n      fn()\n    })\n  }\n}\n\nexport function taskDebounce(fn) {\n  let scheduled = false;\n  return () => {\n    if (!scheduled) {\n      scheduled = true;\n      setTimeout(() => {\n        scheduled = false;\n        fn();\n      }, timeoutDuration);\n    }\n  };\n}\n\nconst supportsMicroTasks = isBrowser && window.Promise\n\n\n/**\n* Create a debounced version of a method, that's asynchronously deferred\n* but called in the minimum time possible.\n*\n* @method\n* @memberof Popper.Utils\n* @argument {Function} fn\n* @returns {Function}\n*/\nexport default (supportsMicroTasks\n  ? microtaskDebounce\n  : taskDebounce);\n","/**\n * Check if the given variable is a function\n * @method\n * @memberof Popper.Utils\n * @argument {Any} functionToCheck - variable to check\n * @returns {Boolean} answer to: is a function?\n */\nexport default function isFunction(functionToCheck) {\n  const getType = {};\n  return (\n    functionToCheck &&\n    getType.toString.call(functionToCheck) === '[object Function]'\n  );\n}\n","/**\n * Get CSS computed property of the given element\n * @method\n * @memberof Popper.Utils\n * @argument {Eement} element\n * @argument {String} property\n */\nexport default function getStyleComputedProperty(element, property) {\n  if (element.nodeType !== 1) {\n    return [];\n  }\n  // NOTE: 1 DOM access here\n  const window = element.ownerDocument.defaultView;\n  const css = window.getComputedStyle(element, null);\n  return property ? css[property] : css;\n}\n","/**\n * Returns the parentNode or the host of the element\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @returns {Element} parent\n */\nexport default function getParentNode(element) {\n  if (element.nodeName === 'HTML') {\n    return element;\n  }\n  return element.parentNode || element.host;\n}\n","import getStyleComputedProperty from './getStyleComputedProperty';\nimport getParentNode from './getParentNode';\n\n/**\n * Returns the scrolling parent of the given element\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @returns {Element} scroll parent\n */\nexport default function getScrollParent(element) {\n  // Return body, `getScroll` will take care to get the correct `scrollTop` from it\n  if (!element) {\n    return document.body\n  }\n\n  switch (element.nodeName) {\n    case 'HTML':\n    case 'BODY':\n      return element.ownerDocument.body\n    case '#document':\n      return element.body\n  }\n\n  // Firefox want us to check `-x` and `-y` variations as well\n  const { overflow, overflowX, overflowY } = getStyleComputedProperty(element);\n  if (/(auto|scroll|overlay)/.test(overflow + overflowY + overflowX)) {\n    return element;\n  }\n\n  return getScrollParent(getParentNode(element));\n}\n","/**\n * Returns the reference node of the reference object, or the reference object itself.\n * @method\n * @memberof Popper.Utils\n * @param {Element|Object} reference - the reference element (the popper will be relative to this)\n * @returns {Element} parent\n */\nexport default function getReferenceNode(reference) {\n  return reference && reference.referenceNode ? reference.referenceNode : reference;\n}\n","import isBrowser from './isBrowser';\n\nconst isIE11 = isBrowser && !!(window.MSInputMethodContext && document.documentMode);\nconst isIE10 = isBrowser && /MSIE 10/.test(navigator.userAgent);\n\n/**\n * Determines if the browser is Internet Explorer\n * @method\n * @memberof Popper.Utils\n * @param {Number} version to check\n * @returns {Boolean} isIE\n */\nexport default function isIE(version) {\n  if (version === 11) {\n    return isIE11;\n  }\n  if (version === 10) {\n    return isIE10;\n  }\n  return isIE11 || isIE10;\n}\n","import getStyleComputedProperty from './getStyleComputedProperty';\nimport isIE from './isIE';\n/**\n * Returns the offset parent of the given element\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @returns {Element} offset parent\n */\nexport default function getOffsetParent(element) {\n  if (!element) {\n    return document.documentElement;\n  }\n\n  const noOffsetParent = isIE(10) ? document.body : null;\n\n  // NOTE: 1 DOM access here\n  let offsetParent = element.offsetParent || null;\n  // Skip hidden elements which don't have an offsetParent\n  while (offsetParent === noOffsetParent && element.nextElementSibling) {\n    offsetParent = (element = element.nextElementSibling).offsetParent;\n  }\n\n  const nodeName = offsetParent && offsetParent.nodeName;\n\n  if (!nodeName || nodeName === 'BODY' || nodeName === 'HTML') {\n    return element ? element.ownerDocument.documentElement : document.documentElement;\n  }\n\n  // .offsetParent will return the closest TH, TD or TABLE in case\n  // no offsetParent is present, I hate this job...\n  if (\n    ['TH', 'TD', 'TABLE'].indexOf(offsetParent.nodeName) !== -1 &&\n    getStyleComputedProperty(offsetParent, 'position') === 'static'\n  ) {\n    return getOffsetParent(offsetParent);\n  }\n\n  return offsetParent;\n}\n","import getOffsetParent from './getOffsetParent';\n\nexport default function isOffsetContainer(element) {\n  const { nodeName } = element;\n  if (nodeName === 'BODY') {\n    return false;\n  }\n  return (\n    nodeName === 'HTML' || getOffsetParent(element.firstElementChild) === element\n  );\n}\n","/**\n * Finds the root node (document, shadowDOM root) of the given element\n * @method\n * @memberof Popper.Utils\n * @argument {Element} node\n * @returns {Element} root node\n */\nexport default function getRoot(node) {\n  if (node.parentNode !== null) {\n    return getRoot(node.parentNode);\n  }\n\n  return node;\n}\n","import isOffsetContainer from './isOffsetContainer';\nimport getRoot from './getRoot';\nimport getOffsetParent from './getOffsetParent';\n\n/**\n * Finds the offset parent common to the two provided nodes\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element1\n * @argument {Element} element2\n * @returns {Element} common offset parent\n */\nexport default function findCommonOffsetParent(element1, element2) {\n  // This check is needed to avoid errors in case one of the elements isn't defined for any reason\n  if (!element1 || !element1.nodeType || !element2 || !element2.nodeType) {\n    return document.documentElement;\n  }\n\n  // Here we make sure to give as \"start\" the element that comes first in the DOM\n  const order =\n    element1.compareDocumentPosition(element2) &\n    Node.DOCUMENT_POSITION_FOLLOWING;\n  const start = order ? element1 : element2;\n  const end = order ? element2 : element1;\n\n  // Get common ancestor container\n  const range = document.createRange();\n  range.setStart(start, 0);\n  range.setEnd(end, 0);\n  const { commonAncestorContainer } = range;\n\n  // Both nodes are inside #document\n  if (\n    (element1 !== commonAncestorContainer &&\n      element2 !== commonAncestorContainer) ||\n    start.contains(end)\n  ) {\n    if (isOffsetContainer(commonAncestorContainer)) {\n      return commonAncestorContainer;\n    }\n\n    return getOffsetParent(commonAncestorContainer);\n  }\n\n  // one of the nodes is inside shadowDOM, find which one\n  const element1root = getRoot(element1);\n  if (element1root.host) {\n    return findCommonOffsetParent(element1root.host, element2);\n  } else {\n    return findCommonOffsetParent(element1, getRoot(element2).host);\n  }\n}\n","/**\n * Gets the scroll value of the given element in the given side (top and left)\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @argument {String} side `top` or `left`\n * @returns {number} amount of scrolled pixels\n */\nexport default function getScroll(element, side = 'top') {\n  const upperSide = side === 'top' ? 'scrollTop' : 'scrollLeft';\n  const nodeName = element.nodeName;\n\n  if (nodeName === 'BODY' || nodeName === 'HTML') {\n    const html = element.ownerDocument.documentElement;\n    const scrollingElement = element.ownerDocument.scrollingElement || html;\n    return scrollingElement[upperSide];\n  }\n\n  return element[upperSide];\n}\n","import getScroll from './getScroll';\n\n/*\n * Sum or subtract the element scroll values (left and top) from a given rect object\n * @method\n * @memberof Popper.Utils\n * @param {Object} rect - Rect object you want to change\n * @param {HTMLElement} element - The element from the function reads the scroll values\n * @param {Boolean} subtract - set to true if you want to subtract the scroll values\n * @return {Object} rect - The modifier rect object\n */\nexport default function includeScroll(rect, element, subtract = false) {\n  const scrollTop = getScroll(element, 'top');\n  const scrollLeft = getScroll(element, 'left');\n  const modifier = subtract ? -1 : 1;\n  rect.top += scrollTop * modifier;\n  rect.bottom += scrollTop * modifier;\n  rect.left += scrollLeft * modifier;\n  rect.right += scrollLeft * modifier;\n  return rect;\n}\n","/*\n * Helper to detect borders of a given element\n * @method\n * @memberof Popper.Utils\n * @param {CSSStyleDeclaration} styles\n * Result of `getStyleComputedProperty` on the given element\n * @param {String} axis - `x` or `y`\n * @return {number} borders - The borders size of the given axis\n */\n\nexport default function getBordersSize(styles, axis) {\n  const sideA = axis === 'x' ? 'Left' : 'Top';\n  const sideB = sideA === 'Left' ? 'Right' : 'Bottom';\n\n  return (\n    parseFloat(styles[`border${sideA}Width`]) +\n    parseFloat(styles[`border${sideB}Width`])\n  );\n}\n","import isIE from './isIE';\n\nfunction getSize(axis, body, html, computedStyle) {\n  return Math.max(\n    body[`offset${axis}`],\n    body[`scroll${axis}`],\n    html[`client${axis}`],\n    html[`offset${axis}`],\n    html[`scroll${axis}`],\n    isIE(10)\n      ? (parseInt(html[`offset${axis}`]) + \n      parseInt(computedStyle[`margin${axis === 'Height' ? 'Top' : 'Left'}`]) + \n      parseInt(computedStyle[`margin${axis === 'Height' ? 'Bottom' : 'Right'}`]))\n    : 0 \n  );\n}\n\nexport default function getWindowSizes(document) {\n  const body = document.body;\n  const html = document.documentElement;\n  const computedStyle = isIE(10) && getComputedStyle(html);\n\n  return {\n    height: getSize('Height', body, html, computedStyle),\n    width: getSize('Width', body, html, computedStyle),\n  };\n}\n","/**\n * Given element offsets, generate an output similar to getBoundingClientRect\n * @method\n * @memberof Popper.Utils\n * @argument {Object} offsets\n * @returns {Object} ClientRect like output\n */\nexport default function getClientRect(offsets) {\n  return {\n    ...offsets,\n    right: offsets.left + offsets.width,\n    bottom: offsets.top + offsets.height,\n  };\n}\n","import getStyleComputedProperty from './getStyleComputedProperty';\nimport getBordersSize from './getBordersSize';\nimport getWindowSizes from './getWindowSizes';\nimport getScroll from './getScroll';\nimport getClientRect from './getClientRect';\nimport isIE from './isIE';\n\n/**\n * Get bounding client rect of given element\n * @method\n * @memberof Popper.Utils\n * @param {HTMLElement} element\n * @return {Object} client rect\n */\nexport default function getBoundingClientRect(element) {\n  let rect = {};\n\n  // IE10 10 FIX: Please, don't ask, the element isn't\n  // considered in DOM in some circumstances...\n  // This isn't reproducible in IE10 compatibility mode of IE11\n  try {\n    if (isIE(10)) {\n      rect = element.getBoundingClientRect();\n      const scrollTop = getScroll(element, 'top');\n      const scrollLeft = getScroll(element, 'left');\n      rect.top += scrollTop;\n      rect.left += scrollLeft;\n      rect.bottom += scrollTop;\n      rect.right += scrollLeft;\n    }\n    else {\n      rect = element.getBoundingClientRect();\n    }\n  }\n  catch(e){}\n\n  const result = {\n    left: rect.left,\n    top: rect.top,\n    width: rect.right - rect.left,\n    height: rect.bottom - rect.top,\n  };\n\n  // subtract scrollbar size from sizes\n  const sizes = element.nodeName === 'HTML' ? getWindowSizes(element.ownerDocument) : {};\n  const width =\n    sizes.width || element.clientWidth || result.width;\n  const height =\n    sizes.height || element.clientHeight || result.height;\n\n  let horizScrollbar = element.offsetWidth - width;\n  let vertScrollbar = element.offsetHeight - height;\n\n  // if an hypothetical scrollbar is detected, we must be sure it's not a `border`\n  // we make this check conditional for performance reasons\n  if (horizScrollbar || vertScrollbar) {\n    const styles = getStyleComputedProperty(element);\n    horizScrollbar -= getBordersSize(styles, 'x');\n    vertScrollbar -= getBordersSize(styles, 'y');\n\n    result.width -= horizScrollbar;\n    result.height -= vertScrollbar;\n  }\n\n  return getClientRect(result);\n}\n","import getStyleComputedProperty from './getStyleComputedProperty';\nimport includeScroll from './includeScroll';\nimport getScrollParent from './getScrollParent';\nimport getBoundingClientRect from './getBoundingClientRect';\nimport runIsIE from './isIE';\nimport getClientRect from './getClientRect';\n\nexport default function getOffsetRectRelativeToArbitraryNode(children, parent, fixedPosition = false) {\n  const isIE10 = runIsIE(10);\n  const isHTML = parent.nodeName === 'HTML';\n  const childrenRect = getBoundingClientRect(children);\n  const parentRect = getBoundingClientRect(parent);\n  const scrollParent = getScrollParent(children);\n\n  const styles = getStyleComputedProperty(parent);\n  const borderTopWidth = parseFloat(styles.borderTopWidth);\n  const borderLeftWidth = parseFloat(styles.borderLeftWidth);\n\n  // In cases where the parent is fixed, we must ignore negative scroll in offset calc\n  if(fixedPosition && isHTML) {\n    parentRect.top = Math.max(parentRect.top, 0);\n    parentRect.left = Math.max(parentRect.left, 0);\n  }\n  let offsets = getClientRect({\n    top: childrenRect.top - parentRect.top - borderTopWidth,\n    left: childrenRect.left - parentRect.left - borderLeftWidth,\n    width: childrenRect.width,\n    height: childrenRect.height,\n  });\n  offsets.marginTop = 0;\n  offsets.marginLeft = 0;\n\n  // Subtract margins of documentElement in case it's being used as parent\n  // we do this only on HTML because it's the only element that behaves\n  // differently when margins are applied to it. The margins are included in\n  // the box of the documentElement, in the other cases not.\n  if (!isIE10 && isHTML) {\n    const marginTop = parseFloat(styles.marginTop);\n    const marginLeft = parseFloat(styles.marginLeft);\n\n    offsets.top -= borderTopWidth - marginTop;\n    offsets.bottom -= borderTopWidth - marginTop;\n    offsets.left -= borderLeftWidth - marginLeft;\n    offsets.right -= borderLeftWidth - marginLeft;\n\n    // Attach marginTop and marginLeft because in some circumstances we may need them\n    offsets.marginTop = marginTop;\n    offsets.marginLeft = marginLeft;\n  }\n\n  if (\n    isIE10 && !fixedPosition\n      ? parent.contains(scrollParent)\n      : parent === scrollParent && scrollParent.nodeName !== 'BODY'\n  ) {\n    offsets = includeScroll(offsets, parent);\n  }\n\n  return offsets;\n}\n","import getOffsetRectRelativeToArbitraryNode from './getOffsetRectRelativeToArbitraryNode';\nimport getScroll from './getScroll';\nimport getClientRect from './getClientRect';\n\nexport default function getViewportOffsetRectRelativeToArtbitraryNode(element, excludeScroll = false) {\n  const html = element.ownerDocument.documentElement;\n  const relativeOffset = getOffsetRectRelativeToArbitraryNode(element, html);\n  const width = Math.max(html.clientWidth, window.innerWidth || 0);\n  const height = Math.max(html.clientHeight, window.innerHeight || 0);\n\n  const scrollTop = !excludeScroll ? getScroll(html) : 0;\n  const scrollLeft = !excludeScroll ? getScroll(html, 'left') : 0;\n\n  const offset = {\n    top: scrollTop - relativeOffset.top + relativeOffset.marginTop,\n    left: scrollLeft - relativeOffset.left + relativeOffset.marginLeft,\n    width,\n    height,\n  };\n\n  return getClientRect(offset);\n}\n","import getStyleComputedProperty from './getStyleComputedProperty';\nimport getParentNode from './getParentNode';\n\n/**\n * Check if the given element is fixed or is inside a fixed parent\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @argument {Element} customContainer\n * @returns {Boolean} answer to \"isFixed?\"\n */\nexport default function isFixed(element) {\n  const nodeName = element.nodeName;\n  if (nodeName === 'BODY' || nodeName === 'HTML') {\n    return false;\n  }\n  if (getStyleComputedProperty(element, 'position') === 'fixed') {\n    return true;\n  }\n  const parentNode = getParentNode(element);\n  if (!parentNode) {\n    return false;\n  }\n  return isFixed(parentNode);\n}\n","import getStyleComputedProperty from './getStyleComputedProperty';\nimport isIE from './isIE';\n/**\n * Finds the first parent of an element that has a transformed property defined\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @returns {Element} first transformed parent or documentElement\n */\n\nexport default function getFixedPositionOffsetParent(element) {\n  // This check is needed to avoid errors in case one of the elements isn't defined for any reason\n   if (!element || !element.parentElement || isIE()) {\n    return document.documentElement;\n  }\n  let el = element.parentElement;\n  while (el && getStyleComputedProperty(el, 'transform') === 'none') {\n    el = el.parentElement;\n  }\n  return el || document.documentElement;\n\n}\n","import getScrollParent from './getScrollParent';\nimport getParentNode from './getParentNode';\nimport getReferenceNode from './getReferenceNode';\nimport findCommonOffsetParent from './findCommonOffsetParent';\nimport getOffsetRectRelativeToArbitraryNode from './getOffsetRectRelativeToArbitraryNode';\nimport getViewportOffsetRectRelativeToArtbitraryNode from './getViewportOffsetRectRelativeToArtbitraryNode';\nimport getWindowSizes from './getWindowSizes';\nimport isFixed from './isFixed';\nimport getFixedPositionOffsetParent from './getFixedPositionOffsetParent';\n\n/**\n * Computed the boundaries limits and return them\n * @method\n * @memberof Popper.Utils\n * @param {HTMLElement} popper\n * @param {HTMLElement} reference\n * @param {number} padding\n * @param {HTMLElement} boundariesElement - Element used to define the boundaries\n * @param {Boolean} fixedPosition - Is in fixed position mode\n * @returns {Object} Coordinates of the boundaries\n */\nexport default function getBoundaries(\n  popper,\n  reference,\n  padding,\n  boundariesElement,\n  fixedPosition = false\n) {\n  // NOTE: 1 DOM access here\n\n  let boundaries = { top: 0, left: 0 };\n  const offsetParent = fixedPosition ? getFixedPositionOffsetParent(popper) : findCommonOffsetParent(popper, getReferenceNode(reference));\n\n  // Handle viewport case\n  if (boundariesElement === 'viewport' ) {\n    boundaries = getViewportOffsetRectRelativeToArtbitraryNode(offsetParent, fixedPosition);\n  }\n\n  else {\n    // Handle other cases based on DOM element used as boundaries\n    let boundariesNode;\n    if (boundariesElement === 'scrollParent') {\n      boundariesNode = getScrollParent(getParentNode(reference));\n      if (boundariesNode.nodeName === 'BODY') {\n        boundariesNode = popper.ownerDocument.documentElement;\n      }\n    } else if (boundariesElement === 'window') {\n      boundariesNode = popper.ownerDocument.documentElement;\n    } else {\n      boundariesNode = boundariesElement;\n    }\n\n    const offsets = getOffsetRectRelativeToArbitraryNode(\n      boundariesNode,\n      offsetParent,\n      fixedPosition\n    );\n\n    // In case of HTML, we need a different computation\n    if (boundariesNode.nodeName === 'HTML' && !isFixed(offsetParent)) {\n      const { height, width } = getWindowSizes(popper.ownerDocument);\n      boundaries.top += offsets.top - offsets.marginTop;\n      boundaries.bottom = height + offsets.top;\n      boundaries.left += offsets.left - offsets.marginLeft;\n      boundaries.right = width + offsets.left;\n    } else {\n      // for all the other DOM elements, this one is good\n      boundaries = offsets;\n    }\n  }\n\n  // Add paddings\n  padding = padding || 0;\n  const isPaddingNumber = typeof padding === 'number';\n  boundaries.left += isPaddingNumber ? padding : padding.left || 0; \n  boundaries.top += isPaddingNumber ? padding : padding.top || 0; \n  boundaries.right -= isPaddingNumber ? padding : padding.right || 0; \n  boundaries.bottom -= isPaddingNumber ? padding : padding.bottom || 0; \n\n  return boundaries;\n}\n","import getBoundaries from '../utils/getBoundaries';\n\nfunction getArea({ width, height }) {\n  return width * height;\n}\n\n/**\n * Utility used to transform the `auto` placement to the placement with more\n * available space.\n * @method\n * @memberof Popper.Utils\n * @argument {Object} data - The data object generated by update method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nexport default function computeAutoPlacement(\n  placement,\n  refRect,\n  popper,\n  reference,\n  boundariesElement,\n  padding = 0\n) {\n  if (placement.indexOf('auto') === -1) {\n    return placement;\n  }\n\n  const boundaries = getBoundaries(\n    popper,\n    reference,\n    padding,\n    boundariesElement\n  );\n\n  const rects = {\n    top: {\n      width: boundaries.width,\n      height: refRect.top - boundaries.top,\n    },\n    right: {\n      width: boundaries.right - refRect.right,\n      height: boundaries.height,\n    },\n    bottom: {\n      width: boundaries.width,\n      height: boundaries.bottom - refRect.bottom,\n    },\n    left: {\n      width: refRect.left - boundaries.left,\n      height: boundaries.height,\n    },\n  };\n\n  const sortedAreas = Object.keys(rects)\n    .map(key => ({\n      key,\n      ...rects[key],\n      area: getArea(rects[key]),\n    }))\n    .sort((a, b) => b.area - a.area);\n\n  const filteredAreas = sortedAreas.filter(\n    ({ width, height }) =>\n      width >= popper.clientWidth && height >= popper.clientHeight\n  );\n\n  const computedPlacement = filteredAreas.length > 0\n    ? filteredAreas[0].key\n    : sortedAreas[0].key;\n\n  const variation = placement.split('-')[1];\n\n  return computedPlacement + (variation ? `-${variation}` : '');\n}\n","import findCommonOffsetParent from './findCommonOffsetParent';\nimport getOffsetRectRelativeToArbitraryNode from './getOffsetRectRelativeToArbitraryNode';\nimport getFixedPositionOffsetParent from './getFixedPositionOffsetParent';\nimport getReferenceNode from './getReferenceNode';\n\n/**\n * Get offsets to the reference element\n * @method\n * @memberof Popper.Utils\n * @param {Object} state\n * @param {Element} popper - the popper element\n * @param {Element} reference - the reference element (the popper will be relative to this)\n * @param {Element} fixedPosition - is in fixed position mode\n * @returns {Object} An object containing the offsets which will be applied to the popper\n */\nexport default function getReferenceOffsets(state, popper, reference, fixedPosition = null) {\n  const commonOffsetParent = fixedPosition ? getFixedPositionOffsetParent(popper) : findCommonOffsetParent(popper, getReferenceNode(reference));\n  return getOffsetRectRelativeToArbitraryNode(reference, commonOffsetParent, fixedPosition);\n}\n","/**\n * Get the outer sizes of the given element (offset size + margins)\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @returns {Object} object containing width and height properties\n */\nexport default function getOuterSizes(element) {\n  const window = element.ownerDocument.defaultView;\n  const styles = window.getComputedStyle(element);\n  const x = parseFloat(styles.marginTop || 0) + parseFloat(styles.marginBottom || 0);\n  const y = parseFloat(styles.marginLeft || 0) + parseFloat(styles.marginRight || 0);\n  const result = {\n    width: element.offsetWidth + y,\n    height: element.offsetHeight + x,\n  };\n  return result;\n}\n","/**\n * Get the opposite placement of the given one\n * @method\n * @memberof Popper.Utils\n * @argument {String} placement\n * @returns {String} flipped placement\n */\nexport default function getOppositePlacement(placement) {\n  const hash = { left: 'right', right: 'left', bottom: 'top', top: 'bottom' };\n  return placement.replace(/left|right|bottom|top/g, matched => hash[matched]);\n}\n","import getOuterSizes from './getOuterSizes';\nimport getOppositePlacement from './getOppositePlacement';\n\n/**\n * Get offsets to the popper\n * @method\n * @memberof Popper.Utils\n * @param {Object} position - CSS position the Popper will get applied\n * @param {HTMLElement} popper - the popper element\n * @param {Object} referenceOffsets - the reference offsets (the popper will be relative to this)\n * @param {String} placement - one of the valid placement options\n * @returns {Object} popperOffsets - An object containing the offsets which will be applied to the popper\n */\nexport default function getPopperOffsets(popper, referenceOffsets, placement) {\n  placement = placement.split('-')[0];\n\n  // Get popper node sizes\n  const popperRect = getOuterSizes(popper);\n\n  // Add position, width and height to our offsets object\n  const popperOffsets = {\n    width: popperRect.width,\n    height: popperRect.height,\n  };\n\n  // depending by the popper placement we have to compute its offsets slightly differently\n  const isHoriz = ['right', 'left'].indexOf(placement) !== -1;\n  const mainSide = isHoriz ? 'top' : 'left';\n  const secondarySide = isHoriz ? 'left' : 'top';\n  const measurement = isHoriz ? 'height' : 'width';\n  const secondaryMeasurement = !isHoriz ? 'height' : 'width';\n\n  popperOffsets[mainSide] =\n    referenceOffsets[mainSide] +\n    referenceOffsets[measurement] / 2 -\n    popperRect[measurement] / 2;\n  if (placement === secondarySide) {\n    popperOffsets[secondarySide] =\n      referenceOffsets[secondarySide] - popperRect[secondaryMeasurement];\n  } else {\n    popperOffsets[secondarySide] =\n      referenceOffsets[getOppositePlacement(secondarySide)];\n  }\n\n  return popperOffsets;\n}\n","/**\n * Mimics the `find` method of Array\n * @method\n * @memberof Popper.Utils\n * @argument {Array} arr\n * @argument prop\n * @argument value\n * @returns index or -1\n */\nexport default function find(arr, check) {\n  // use native find if supported\n  if (Array.prototype.find) {\n    return arr.find(check);\n  }\n\n  // use `filter` to obtain the same behavior of `find`\n  return arr.filter(check)[0];\n}\n","import find from './find';\n\n/**\n * Return the index of the matching object\n * @method\n * @memberof Popper.Utils\n * @argument {Array} arr\n * @argument prop\n * @argument value\n * @returns index or -1\n */\nexport default function findIndex(arr, prop, value) {\n  // use native findIndex if supported\n  if (Array.prototype.findIndex) {\n    return arr.findIndex(cur => cur[prop] === value);\n  }\n\n  // use `find` + `indexOf` if `findIndex` isn't supported\n  const match = find(arr, obj => obj[prop] === value);\n  return arr.indexOf(match);\n}\n","import isFunction from './isFunction';\nimport findIndex from './findIndex';\nimport getClientRect from '../utils/getClientRect';\n\n/**\n * Loop trough the list of modifiers and run them in order,\n * each of them will then edit the data object.\n * @method\n * @memberof Popper.Utils\n * @param {dataObject} data\n * @param {Array} modifiers\n * @param {String} ends - Optional modifier name used as stopper\n * @returns {dataObject}\n */\nexport default function runModifiers(modifiers, data, ends) {\n  const modifiersToRun = ends === undefined\n    ? modifiers\n    : modifiers.slice(0, findIndex(modifiers, 'name', ends));\n\n  modifiersToRun.forEach(modifier => {\n    if (modifier['function']) { // eslint-disable-line dot-notation\n      console.warn('`modifier.function` is deprecated, use `modifier.fn`!');\n    }\n    const fn = modifier['function'] || modifier.fn; // eslint-disable-line dot-notation\n    if (modifier.enabled && isFunction(fn)) {\n      // Add properties to offsets to make them a complete clientRect object\n      // we do this before each modifier to make sure the previous one doesn't\n      // mess with these values\n      data.offsets.popper = getClientRect(data.offsets.popper);\n      data.offsets.reference = getClientRect(data.offsets.reference);\n\n      data = fn(data, modifier);\n    }\n  });\n\n  return data;\n}\n","import computeAutoPlacement from '../utils/computeAutoPlacement';\nimport getReferenceOffsets from '../utils/getReferenceOffsets';\nimport getPopperOffsets from '../utils/getPopperOffsets';\nimport runModifiers from '../utils/runModifiers';\n\n/**\n * Updates the position of the popper, computing the new offsets and applying\n * the new style.<br />\n * Prefer `scheduleUpdate` over `update` because of performance reasons.\n * @method\n * @memberof Popper\n */\nexport default function update() {\n  // if popper is destroyed, don't perform any further update\n  if (this.state.isDestroyed) {\n    return;\n  }\n\n  let data = {\n    instance: this,\n    styles: {},\n    arrowStyles: {},\n    attributes: {},\n    flipped: false,\n    offsets: {},\n  };\n\n  // compute reference element offsets\n  data.offsets.reference = getReferenceOffsets(\n    this.state,\n    this.popper,\n    this.reference,\n    this.options.positionFixed\n  );\n\n  // compute auto placement, store placement inside the data object,\n  // modifiers will be able to edit `placement` if needed\n  // and refer to originalPlacement to know the original value\n  data.placement = computeAutoPlacement(\n    this.options.placement,\n    data.offsets.reference,\n    this.popper,\n    this.reference,\n    this.options.modifiers.flip.boundariesElement,\n    this.options.modifiers.flip.padding\n  );\n\n  // store the computed placement inside `originalPlacement`\n  data.originalPlacement = data.placement;\n\n  data.positionFixed = this.options.positionFixed;\n\n  // compute the popper offsets\n  data.offsets.popper = getPopperOffsets(\n    this.popper,\n    data.offsets.reference,\n    data.placement\n  );\n\n  data.offsets.popper.position = this.options.positionFixed\n    ? 'fixed'\n    : 'absolute';\n\n  // run the modifiers\n  data = runModifiers(this.modifiers, data);\n\n  // the first `update` will call `onCreate` callback\n  // the other ones will call `onUpdate` callback\n  if (!this.state.isCreated) {\n    this.state.isCreated = true;\n    this.options.onCreate(data);\n  } else {\n    this.options.onUpdate(data);\n  }\n}\n","/**\n * Helper used to know if the given modifier is enabled.\n * @method\n * @memberof Popper.Utils\n * @returns {Boolean}\n */\nexport default function isModifierEnabled(modifiers, modifierName) {\n  return modifiers.some(\n    ({ name, enabled }) => enabled && name === modifierName\n  );\n}\n","/**\n * Get the prefixed supported property name\n * @method\n * @memberof Popper.Utils\n * @argument {String} property (camelCase)\n * @returns {String} prefixed property (camelCase or PascalCase, depending on the vendor prefix)\n */\nexport default function getSupportedPropertyName(property) {\n  const prefixes = [false, 'ms', 'Webkit', 'Moz', 'O'];\n  const upperProp = property.charAt(0).toUpperCase() + property.slice(1);\n\n  for (let i = 0; i < prefixes.length; i++) {\n    const prefix = prefixes[i];\n    const toCheck = prefix ? `${prefix}${upperProp}` : property;\n    if (typeof document.body.style[toCheck] !== 'undefined') {\n      return toCheck;\n    }\n  }\n  return null;\n}\n","import isModifierEnabled from '../utils/isModifierEnabled';\nimport getSupportedPropertyName from '../utils/getSupportedPropertyName';\n\n/**\n * Destroys the popper.\n * @method\n * @memberof Popper\n */\nexport default function destroy() {\n  this.state.isDestroyed = true;\n\n  // touch DOM only if `applyStyle` modifier is enabled\n  if (isModifierEnabled(this.modifiers, 'applyStyle')) {\n    this.popper.removeAttribute('x-placement');\n    this.popper.style.position = '';\n    this.popper.style.top = '';\n    this.popper.style.left = '';\n    this.popper.style.right = '';\n    this.popper.style.bottom = '';\n    this.popper.style.willChange = '';\n    this.popper.style[getSupportedPropertyName('transform')] = '';\n  }\n\n  this.disableEventListeners();\n\n  // remove the popper if user explicitly asked for the deletion on destroy\n  // do not use `remove` because IE11 doesn't support it\n  if (this.options.removeOnDestroy) {\n    this.popper.parentNode.removeChild(this.popper);\n  }\n  return this;\n}\n","/**\n * Get the window associated with the element\n * @argument {Element} element\n * @returns {Window}\n */\nexport default function getWindow(element) {\n  const ownerDocument = element.ownerDocument;\n  return ownerDocument ? ownerDocument.defaultView : window;\n}\n","import getScrollParent from './getScrollParent';\nimport getWindow from './getWindow';\n\nfunction attachToScrollParents(scrollParent, event, callback, scrollParents) {\n  const isBody = scrollParent.nodeName === 'BODY';\n  const target = isBody ? scrollParent.ownerDocument.defaultView : scrollParent;\n  target.addEventListener(event, callback, { passive: true });\n\n  if (!isBody) {\n    attachToScrollParents(\n      getScrollParent(target.parentNode),\n      event,\n      callback,\n      scrollParents\n    );\n  }\n  scrollParents.push(target);\n}\n\n/**\n * Setup needed event listeners used to update the popper position\n * @method\n * @memberof Popper.Utils\n * @private\n */\nexport default function setupEventListeners(\n  reference,\n  options,\n  state,\n  updateBound\n) {\n  // Resize event listener on window\n  state.updateBound = updateBound;\n  getWindow(reference).addEventListener('resize', state.updateBound, { passive: true });\n\n  // Scroll event listener on scroll parents\n  const scrollElement = getScrollParent(reference);\n  attachToScrollParents(\n    scrollElement,\n    'scroll',\n    state.updateBound,\n    state.scrollParents\n  );\n  state.scrollElement = scrollElement;\n  state.eventsEnabled = true;\n\n  return state;\n}\n","import setupEventListeners from '../utils/setupEventListeners';\n\n/**\n * It will add resize/scroll events and start recalculating\n * position of the popper element when they are triggered.\n * @method\n * @memberof Popper\n */\nexport default function enableEventListeners() {\n  if (!this.state.eventsEnabled) {\n    this.state = setupEventListeners(\n      this.reference,\n      this.options,\n      this.state,\n      this.scheduleUpdate\n    );\n  }\n}\n","import getWindow from './getWindow';\n\n/**\n * Remove event listeners used to update the popper position\n * @method\n * @memberof Popper.Utils\n * @private\n */\nexport default function removeEventListeners(reference, state) {\n  // Remove resize event listener on window\n  getWindow(reference).removeEventListener('resize', state.updateBound);\n\n  // Remove scroll event listener on scroll parents\n  state.scrollParents.forEach(target => {\n    target.removeEventListener('scroll', state.updateBound);\n  });\n\n  // Reset state\n  state.updateBound = null;\n  state.scrollParents = [];\n  state.scrollElement = null;\n  state.eventsEnabled = false;\n  return state;\n}\n","import removeEventListeners from '../utils/removeEventListeners';\n\n/**\n * It will remove resize/scroll events and won't recalculate popper position\n * when they are triggered. It also won't trigger `onUpdate` callback anymore,\n * unless you call `update` method manually.\n * @method\n * @memberof Popper\n */\nexport default function disableEventListeners() {\n  if (this.state.eventsEnabled) {\n    cancelAnimationFrame(this.scheduleUpdate);\n    this.state = removeEventListeners(this.reference, this.state);\n  }\n}\n","/**\n * Tells if a given input is a number\n * @method\n * @memberof Popper.Utils\n * @param {*} input to check\n * @return {Boolean}\n */\nexport default function isNumeric(n) {\n  return n !== '' && !isNaN(parseFloat(n)) && isFinite(n);\n}\n","import isNumeric from './isNumeric';\n\n/**\n * Set the style to the given popper\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element - Element to apply the style to\n * @argument {Object} styles\n * Object with a list of properties and values which will be applied to the element\n */\nexport default function setStyles(element, styles) {\n  Object.keys(styles).forEach(prop => {\n    let unit = '';\n    // add unit if the value is numeric and is one of the following\n    if (\n      ['width', 'height', 'top', 'right', 'bottom', 'left'].indexOf(prop) !==\n        -1 &&\n      isNumeric(styles[prop])\n    ) {\n      unit = 'px';\n    }\n    element.style[prop] = styles[prop] + unit;\n  });\n}\n","/**\n * Set the attributes to the given popper\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element - Element to apply the attributes to\n * @argument {Object} styles\n * Object with a list of properties and values which will be applied to the element\n */\nexport default function setAttributes(element, attributes) {\n  Object.keys(attributes).forEach(function(prop) {\n    const value = attributes[prop];\n    if (value !== false) {\n      element.setAttribute(prop, attributes[prop]);\n    } else {\n      element.removeAttribute(prop);\n    }\n  });\n}\n","import setStyles from '../utils/setStyles';\nimport setAttributes from '../utils/setAttributes';\nimport getReferenceOffsets from '../utils/getReferenceOffsets';\nimport computeAutoPlacement from '../utils/computeAutoPlacement';\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by `update` method\n * @argument {Object} data.styles - List of style properties - values to apply to popper element\n * @argument {Object} data.attributes - List of attribute properties - values to apply to popper element\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The same data object\n */\nexport default function applyStyle(data) {\n  // any property present in `data.styles` will be applied to the popper,\n  // in this way we can make the 3rd party modifiers add custom styles to it\n  // Be aware, modifiers could override the properties defined in the previous\n  // lines of this modifier!\n  setStyles(data.instance.popper, data.styles);\n\n  // any property present in `data.attributes` will be applied to the popper,\n  // they will be set as HTML attributes of the element\n  setAttributes(data.instance.popper, data.attributes);\n\n  // if arrowElement is defined and arrowStyles has some properties\n  if (data.arrowElement && Object.keys(data.arrowStyles).length) {\n    setStyles(data.arrowElement, data.arrowStyles);\n  }\n\n  return data;\n}\n\n/**\n * Set the x-placement attribute before everything else because it could be used\n * to add margins to the popper margins needs to be calculated to get the\n * correct popper offsets.\n * @method\n * @memberof Popper.modifiers\n * @param {HTMLElement} reference - The reference element used to position the popper\n * @param {HTMLElement} popper - The HTML element used as popper\n * @param {Object} options - Popper.js options\n */\nexport function applyStyleOnLoad(\n  reference,\n  popper,\n  options,\n  modifierOptions,\n  state\n) {\n  // compute reference element offsets\n  const referenceOffsets = getReferenceOffsets(state, popper, reference, options.positionFixed);\n\n  // compute auto placement, store placement inside the data object,\n  // modifiers will be able to edit `placement` if needed\n  // and refer to originalPlacement to know the original value\n  const placement = computeAutoPlacement(\n    options.placement,\n    referenceOffsets,\n    popper,\n    reference,\n    options.modifiers.flip.boundariesElement,\n    options.modifiers.flip.padding\n  );\n\n  popper.setAttribute('x-placement', placement);\n\n  // Apply `position` to popper before anything else because\n  // without the position applied we can't guarantee correct computations\n  setStyles(popper, { position: options.positionFixed ? 'fixed' : 'absolute' });\n\n  return options;\n}\n","/**\n * @function\n * @memberof Popper.Utils\n * @argument {Object} data - The data object generated by `update` method\n * @argument {Boolean} shouldRound - If the offsets should be rounded at all\n * @returns {Object} The popper's position offsets rounded\n *\n * The tale of pixel-perfect positioning. It's still not 100% perfect, but as\n * good as it can be within reason.\n * Discussion here: https://github.com/FezVrasta/popper.js/pull/715\n *\n * Low DPI screens cause a popper to be blurry if not using full pixels (Safari\n * as well on High DPI screens).\n *\n * Firefox prefers no rounding for positioning and does not have blurriness on\n * high DPI screens.\n *\n * Only horizontal placement and left/right values need to be considered.\n */\nexport default function getRoundedOffsets(data, shouldRound) {\n  const { popper, reference } = data.offsets;\n  const { round, floor } = Math;\n  const noRound = v => v;\n  \n  const referenceWidth = round(reference.width);\n  const popperWidth = round(popper.width);\n  \n  const isVertical = ['left', 'right'].indexOf(data.placement) !== -1;\n  const isVariation = data.placement.indexOf('-') !== -1;\n  const sameWidthParity = referenceWidth % 2 === popperWidth % 2;\n  const bothOddWidth = referenceWidth % 2 === 1 && popperWidth % 2 === 1;\n\n  const horizontalToInteger = !shouldRound\n    ? noRound\n    : isVertical || isVariation || sameWidthParity\n    ? round\n    : floor;\n  const verticalToInteger = !shouldRound ? noRound : round;\n\n  return {\n    left: horizontalToInteger(\n      bothOddWidth && !isVariation && shouldRound\n        ? popper.left - 1\n        : popper.left\n    ),\n    top: verticalToInteger(popper.top),\n    bottom: verticalToInteger(popper.bottom),\n    right: horizontalToInteger(popper.right),\n  };\n}\n","import getSupportedPropertyName from '../utils/getSupportedPropertyName';\nimport find from '../utils/find';\nimport getOffsetParent from '../utils/getOffsetParent';\nimport getBoundingClientRect from '../utils/getBoundingClientRect';\nimport getRoundedOffsets from '../utils/getRoundedOffsets';\nimport isBrowser from '../utils/isBrowser';\n\nconst isFirefox = isBrowser && /Firefox/i.test(navigator.userAgent);\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by `update` method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nexport default function computeStyle(data, options) {\n  const { x, y } = options;\n  const { popper } = data.offsets;\n\n  // Remove this legacy support in Popper.js v2\n  const legacyGpuAccelerationOption = find(\n    data.instance.modifiers,\n    modifier => modifier.name === 'applyStyle'\n  ).gpuAcceleration;\n  if (legacyGpuAccelerationOption !== undefined) {\n    console.warn(\n      'WARNING: `gpuAcceleration` option moved to `computeStyle` modifier and will not be supported in future versions of Popper.js!'\n    );\n  }\n  const gpuAcceleration =\n    legacyGpuAccelerationOption !== undefined\n      ? legacyGpuAccelerationOption\n      : options.gpuAcceleration;\n\n  const offsetParent = getOffsetParent(data.instance.popper);\n  const offsetParentRect = getBoundingClientRect(offsetParent);\n\n  // Styles\n  const styles = {\n    position: popper.position,\n  };\n\n  const offsets = getRoundedOffsets(\n    data,\n    window.devicePixelRatio < 2 || !isFirefox\n  );\n\n  const sideA = x === 'bottom' ? 'top' : 'bottom';\n  const sideB = y === 'right' ? 'left' : 'right';\n\n  // if gpuAcceleration is set to `true` and transform is supported,\n  //  we use `translate3d` to apply the position to the popper we\n  // automatically use the supported prefixed version if needed\n  const prefixedProperty = getSupportedPropertyName('transform');\n\n  // now, let's make a step back and look at this code closely (wtf?)\n  // If the content of the popper grows once it's been positioned, it\n  // may happen that the popper gets misplaced because of the new content\n  // overflowing its reference element\n  // To avoid this problem, we provide two options (x and y), which allow\n  // the consumer to define the offset origin.\n  // If we position a popper on top of a reference element, we can set\n  // `x` to `top` to make the popper grow towards its top instead of\n  // its bottom.\n  let left, top;\n  if (sideA === 'bottom') {\n    // when offsetParent is <html> the positioning is relative to the bottom of the screen (excluding the scrollbar)\n    // and not the bottom of the html element\n    if (offsetParent.nodeName === 'HTML') {\n      top = -offsetParent.clientHeight + offsets.bottom;\n    } else {\n      top = -offsetParentRect.height + offsets.bottom;\n    }\n  } else {\n    top = offsets.top;\n  }\n  if (sideB === 'right') {\n    if (offsetParent.nodeName === 'HTML') {\n      left = -offsetParent.clientWidth + offsets.right;\n    } else {\n      left = -offsetParentRect.width + offsets.right;\n    }\n  } else {\n    left = offsets.left;\n  }\n  if (gpuAcceleration && prefixedProperty) {\n    styles[prefixedProperty] = `translate3d(${left}px, ${top}px, 0)`;\n    styles[sideA] = 0;\n    styles[sideB] = 0;\n    styles.willChange = 'transform';\n  } else {\n    // othwerise, we use the standard `top`, `left`, `bottom` and `right` properties\n    const invertTop = sideA === 'bottom' ? -1 : 1;\n    const invertLeft = sideB === 'right' ? -1 : 1;\n    styles[sideA] = top * invertTop;\n    styles[sideB] = left * invertLeft;\n    styles.willChange = `${sideA}, ${sideB}`;\n  }\n\n  // Attributes\n  const attributes = {\n    'x-placement': data.placement,\n  };\n\n  // Update `data` attributes, styles and arrowStyles\n  data.attributes = { ...attributes, ...data.attributes };\n  data.styles = { ...styles, ...data.styles };\n  data.arrowStyles = { ...data.offsets.arrow, ...data.arrowStyles };\n\n  return data;\n}\n","import find from './find';\n\n/**\n * Helper used to know if the given modifier depends from another one.<br />\n * It checks if the needed modifier is listed and enabled.\n * @method\n * @memberof Popper.Utils\n * @param {Array} modifiers - list of modifiers\n * @param {String} requestingName - name of requesting modifier\n * @param {String} requestedName - name of requested modifier\n * @returns {Boolean}\n */\nexport default function isModifierRequired(\n  modifiers,\n  requestingName,\n  requestedName\n) {\n  const requesting = find(modifiers, ({ name }) => name === requestingName);\n\n  const isRequired =\n    !!requesting &&\n    modifiers.some(modifier => {\n      return (\n        modifier.name === requestedName &&\n        modifier.enabled &&\n        modifier.order < requesting.order\n      );\n    });\n\n  if (!isRequired) {\n    const requesting = `\\`${requestingName}\\``;\n    const requested = `\\`${requestedName}\\``;\n    console.warn(\n      `${requested} modifier is required by ${requesting} modifier in order to work, be sure to include it before ${requesting}!`\n    );\n  }\n  return isRequired;\n}\n","import getClientRect from '../utils/getClientRect';\nimport getOuterSizes from '../utils/getOuterSizes';\nimport isModifierRequired from '../utils/isModifierRequired';\nimport getStyleComputedProperty from '../utils/getStyleComputedProperty';\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by update method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nexport default function arrow(data, options) {\n  // arrow depends on keepTogether in order to work\n  if (!isModifierRequired(data.instance.modifiers, 'arrow', 'keepTogether')) {\n    return data;\n  }\n\n  let arrowElement = options.element;\n\n  // if arrowElement is a string, suppose it's a CSS selector\n  if (typeof arrowElement === 'string') {\n    arrowElement = data.instance.popper.querySelector(arrowElement);\n\n    // if arrowElement is not found, don't run the modifier\n    if (!arrowElement) {\n      return data;\n    }\n  } else {\n    // if the arrowElement isn't a query selector we must check that the\n    // provided DOM node is child of its popper node\n    if (!data.instance.popper.contains(arrowElement)) {\n      console.warn(\n        'WARNING: `arrow.element` must be child of its popper element!'\n      );\n      return data;\n    }\n  }\n\n  const placement = data.placement.split('-')[0];\n  const { popper, reference } = data.offsets;\n  const isVertical = ['left', 'right'].indexOf(placement) !== -1;\n\n  const len = isVertical ? 'height' : 'width';\n  const sideCapitalized = isVertical ? 'Top' : 'Left';\n  const side = sideCapitalized.toLowerCase();\n  const altSide = isVertical ? 'left' : 'top';\n  const opSide = isVertical ? 'bottom' : 'right';\n  const arrowElementSize = getOuterSizes(arrowElement)[len];\n\n  //\n  // extends keepTogether behavior making sure the popper and its\n  // reference have enough pixels in conjunction\n  //\n\n  // top/left side\n  if (reference[opSide] - arrowElementSize < popper[side]) {\n    data.offsets.popper[side] -=\n      popper[side] - (reference[opSide] - arrowElementSize);\n  }\n  // bottom/right side\n  if (reference[side] + arrowElementSize > popper[opSide]) {\n    data.offsets.popper[side] +=\n      reference[side] + arrowElementSize - popper[opSide];\n  }\n  data.offsets.popper = getClientRect(data.offsets.popper);\n\n  // compute center of the popper\n  const center = reference[side] + reference[len] / 2 - arrowElementSize / 2;\n\n  // Compute the sideValue using the updated popper offsets\n  // take popper margin in account because we don't have this info available\n  const css = getStyleComputedProperty(data.instance.popper);\n  const popperMarginSide = parseFloat(css[`margin${sideCapitalized}`]);\n  const popperBorderSide = parseFloat(css[`border${sideCapitalized}Width`]);\n  let sideValue =\n    center - data.offsets.popper[side] - popperMarginSide - popperBorderSide;\n\n  // prevent arrowElement from being placed not contiguously to its popper\n  sideValue = Math.max(Math.min(popper[len] - arrowElementSize, sideValue), 0);\n\n  data.arrowElement = arrowElement;\n  data.offsets.arrow = {\n    [side]: Math.round(sideValue),\n    [altSide]: '', // make sure to unset any eventual altSide value from the DOM node\n  };\n\n  return data;\n}\n","/**\n * Get the opposite placement variation of the given one\n * @method\n * @memberof Popper.Utils\n * @argument {String} placement variation\n * @returns {String} flipped placement variation\n */\nexport default function getOppositeVariation(variation) {\n  if (variation === 'end') {\n    return 'start';\n  } else if (variation === 'start') {\n    return 'end';\n  }\n  return variation;\n}\n","/**\n * List of accepted placements to use as values of the `placement` option.<br />\n * Valid placements are:\n * - `auto`\n * - `top`\n * - `right`\n * - `bottom`\n * - `left`\n *\n * Each placement can have a variation from this list:\n * - `-start`\n * - `-end`\n *\n * Variations are interpreted easily if you think of them as the left to right\n * written languages. Horizontally (`top` and `bottom`), `start` is left and `end`\n * is right.<br />\n * Vertically (`left` and `right`), `start` is top and `end` is bottom.\n *\n * Some valid examples are:\n * - `top-end` (on top of reference, right aligned)\n * - `right-start` (on right of reference, top aligned)\n * - `bottom` (on bottom, centered)\n * - `auto-end` (on the side with more space available, alignment depends by placement)\n *\n * @static\n * @type {Array}\n * @enum {String}\n * @readonly\n * @method placements\n * @memberof Popper\n */\nexport default [\n  'auto-start',\n  'auto',\n  'auto-end',\n  'top-start',\n  'top',\n  'top-end',\n  'right-start',\n  'right',\n  'right-end',\n  'bottom-end',\n  'bottom',\n  'bottom-start',\n  'left-end',\n  'left',\n  'left-start',\n];\n","import placements from '../methods/placements';\n\n// Get rid of `auto` `auto-start` and `auto-end`\nconst validPlacements = placements.slice(3);\n\n/**\n * Given an initial placement, returns all the subsequent placements\n * clockwise (or counter-clockwise).\n *\n * @method\n * @memberof Popper.Utils\n * @argument {String} placement - A valid placement (it accepts variations)\n * @argument {Boolean} counter - Set to true to walk the placements counterclockwise\n * @returns {Array} placements including their variations\n */\nexport default function clockwise(placement, counter = false) {\n  const index = validPlacements.indexOf(placement);\n  const arr = validPlacements\n    .slice(index + 1)\n    .concat(validPlacements.slice(0, index));\n  return counter ? arr.reverse() : arr;\n}\n","import getOppositePlacement from '../utils/getOppositePlacement';\nimport getOppositeVariation from '../utils/getOppositeVariation';\nimport getPopperOffsets from '../utils/getPopperOffsets';\nimport runModifiers from '../utils/runModifiers';\nimport getBoundaries from '../utils/getBoundaries';\nimport isModifierEnabled from '../utils/isModifierEnabled';\nimport clockwise from '../utils/clockwise';\n\nconst BEHAVIORS = {\n  FLIP: 'flip',\n  CLOCKWISE: 'clockwise',\n  COUNTERCLOCKWISE: 'counterclockwise',\n};\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by update method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nexport default function flip(data, options) {\n  // if `inner` modifier is enabled, we can't use the `flip` modifier\n  if (isModifierEnabled(data.instance.modifiers, 'inner')) {\n    return data;\n  }\n\n  if (data.flipped && data.placement === data.originalPlacement) {\n    // seems like flip is trying to loop, probably there's not enough space on any of the flippable sides\n    return data;\n  }\n\n  const boundaries = getBoundaries(\n    data.instance.popper,\n    data.instance.reference,\n    options.padding,\n    options.boundariesElement,\n    data.positionFixed\n  );\n\n  let placement = data.placement.split('-')[0];\n  let placementOpposite = getOppositePlacement(placement);\n  let variation = data.placement.split('-')[1] || '';\n\n  let flipOrder = [];\n\n  switch (options.behavior) {\n    case BEHAVIORS.FLIP:\n      flipOrder = [placement, placementOpposite];\n      break;\n    case BEHAVIORS.CLOCKWISE:\n      flipOrder = clockwise(placement);\n      break;\n    case BEHAVIORS.COUNTERCLOCKWISE:\n      flipOrder = clockwise(placement, true);\n      break;\n    default:\n      flipOrder = options.behavior;\n  }\n\n  flipOrder.forEach((step, index) => {\n    if (placement !== step || flipOrder.length === index + 1) {\n      return data;\n    }\n\n    placement = data.placement.split('-')[0];\n    placementOpposite = getOppositePlacement(placement);\n\n    const popperOffsets = data.offsets.popper;\n    const refOffsets = data.offsets.reference;\n\n    // using floor because the reference offsets may contain decimals we are not going to consider here\n    const floor = Math.floor;\n    const overlapsRef =\n      (placement === 'left' &&\n        floor(popperOffsets.right) > floor(refOffsets.left)) ||\n      (placement === 'right' &&\n        floor(popperOffsets.left) < floor(refOffsets.right)) ||\n      (placement === 'top' &&\n        floor(popperOffsets.bottom) > floor(refOffsets.top)) ||\n      (placement === 'bottom' &&\n        floor(popperOffsets.top) < floor(refOffsets.bottom));\n\n    const overflowsLeft = floor(popperOffsets.left) < floor(boundaries.left);\n    const overflowsRight = floor(popperOffsets.right) > floor(boundaries.right);\n    const overflowsTop = floor(popperOffsets.top) < floor(boundaries.top);\n    const overflowsBottom =\n      floor(popperOffsets.bottom) > floor(boundaries.bottom);\n\n    const overflowsBoundaries =\n      (placement === 'left' && overflowsLeft) ||\n      (placement === 'right' && overflowsRight) ||\n      (placement === 'top' && overflowsTop) ||\n      (placement === 'bottom' && overflowsBottom);\n\n    // flip the variation if required\n    const isVertical = ['top', 'bottom'].indexOf(placement) !== -1;\n\n    // flips variation if reference element overflows boundaries\n    const flippedVariationByRef =\n      !!options.flipVariations &&\n      ((isVertical && variation === 'start' && overflowsLeft) ||\n        (isVertical && variation === 'end' && overflowsRight) ||\n        (!isVertical && variation === 'start' && overflowsTop) ||\n        (!isVertical && variation === 'end' && overflowsBottom));\n\n    // flips variation if popper content overflows boundaries\n    const flippedVariationByContent =\n      !!options.flipVariationsByContent &&\n      ((isVertical && variation === 'start' && overflowsRight) ||\n        (isVertical && variation === 'end' && overflowsLeft) ||\n        (!isVertical && variation === 'start' && overflowsBottom) ||\n        (!isVertical && variation === 'end' && overflowsTop));\n\n    const flippedVariation = flippedVariationByRef || flippedVariationByContent;\n\n    if (overlapsRef || overflowsBoundaries || flippedVariation) {\n      // this boolean to detect any flip loop\n      data.flipped = true;\n\n      if (overlapsRef || overflowsBoundaries) {\n        placement = flipOrder[index + 1];\n      }\n\n      if (flippedVariation) {\n        variation = getOppositeVariation(variation);\n      }\n\n      data.placement = placement + (variation ? '-' + variation : '');\n\n      // this object contains `position`, we want to preserve it along with\n      // any additional property we may add in the future\n      data.offsets.popper = {\n        ...data.offsets.popper,\n        ...getPopperOffsets(\n          data.instance.popper,\n          data.offsets.reference,\n          data.placement\n        ),\n      };\n\n      data = runModifiers(data.instance.modifiers, data, 'flip');\n    }\n  });\n  return data;\n}\n","/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by update method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nexport default function keepTogether(data) {\n  const { popper, reference } = data.offsets;\n  const placement = data.placement.split('-')[0];\n  const floor = Math.floor;\n  const isVertical = ['top', 'bottom'].indexOf(placement) !== -1;\n  const side = isVertical ? 'right' : 'bottom';\n  const opSide = isVertical ? 'left' : 'top';\n  const measurement = isVertical ? 'width' : 'height';\n\n  if (popper[side] < floor(reference[opSide])) {\n    data.offsets.popper[opSide] =\n      floor(reference[opSide]) - popper[measurement];\n  }\n  if (popper[opSide] > floor(reference[side])) {\n    data.offsets.popper[opSide] = floor(reference[side]);\n  }\n\n  return data;\n}\n","import isNumeric from '../utils/isNumeric';\nimport getClientRect from '../utils/getClientRect';\nimport find from '../utils/find';\n\n/**\n * Converts a string containing value + unit into a px value number\n * @function\n * @memberof {modifiers~offset}\n * @private\n * @argument {String} str - Value + unit string\n * @argument {String} measurement - `height` or `width`\n * @argument {Object} popperOffsets\n * @argument {Object} referenceOffsets\n * @returns {Number|String}\n * Value in pixels, or original string if no values were extracted\n */\nexport function toValue(str, measurement, popperOffsets, referenceOffsets) {\n  // separate value from unit\n  const split = str.match(/((?:\\-|\\+)?\\d*\\.?\\d*)(.*)/);\n  const value = +split[1];\n  const unit = split[2];\n\n  // If it's not a number it's an operator, I guess\n  if (!value) {\n    return str;\n  }\n\n  if (unit.indexOf('%') === 0) {\n    let element;\n    switch (unit) {\n      case '%p':\n        element = popperOffsets;\n        break;\n      case '%':\n      case '%r':\n      default:\n        element = referenceOffsets;\n    }\n\n    const rect = getClientRect(element);\n    return rect[measurement] / 100 * value;\n  } else if (unit === 'vh' || unit === 'vw') {\n    // if is a vh or vw, we calculate the size based on the viewport\n    let size;\n    if (unit === 'vh') {\n      size = Math.max(\n        document.documentElement.clientHeight,\n        window.innerHeight || 0\n      );\n    } else {\n      size = Math.max(\n        document.documentElement.clientWidth,\n        window.innerWidth || 0\n      );\n    }\n    return size / 100 * value;\n  } else {\n    // if is an explicit pixel unit, we get rid of the unit and keep the value\n    // if is an implicit unit, it's px, and we return just the value\n    return value;\n  }\n}\n\n/**\n * Parse an `offset` string to extrapolate `x` and `y` numeric offsets.\n * @function\n * @memberof {modifiers~offset}\n * @private\n * @argument {String} offset\n * @argument {Object} popperOffsets\n * @argument {Object} referenceOffsets\n * @argument {String} basePlacement\n * @returns {Array} a two cells array with x and y offsets in numbers\n */\nexport function parseOffset(\n  offset,\n  popperOffsets,\n  referenceOffsets,\n  basePlacement\n) {\n  const offsets = [0, 0];\n\n  // Use height if placement is left or right and index is 0 otherwise use width\n  // in this way the first offset will use an axis and the second one\n  // will use the other one\n  const useHeight = ['right', 'left'].indexOf(basePlacement) !== -1;\n\n  // Split the offset string to obtain a list of values and operands\n  // The regex addresses values with the plus or minus sign in front (+10, -20, etc)\n  const fragments = offset.split(/(\\+|\\-)/).map(frag => frag.trim());\n\n  // Detect if the offset string contains a pair of values or a single one\n  // they could be separated by comma or space\n  const divider = fragments.indexOf(\n    find(fragments, frag => frag.search(/,|\\s/) !== -1)\n  );\n\n  if (fragments[divider] && fragments[divider].indexOf(',') === -1) {\n    console.warn(\n      'Offsets separated by white space(s) are deprecated, use a comma (,) instead.'\n    );\n  }\n\n  // If divider is found, we divide the list of values and operands to divide\n  // them by ofset X and Y.\n  const splitRegex = /\\s*,\\s*|\\s+/;\n  let ops = divider !== -1\n    ? [\n        fragments\n          .slice(0, divider)\n          .concat([fragments[divider].split(splitRegex)[0]]),\n        [fragments[divider].split(splitRegex)[1]].concat(\n          fragments.slice(divider + 1)\n        ),\n      ]\n    : [fragments];\n\n  // Convert the values with units to absolute pixels to allow our computations\n  ops = ops.map((op, index) => {\n    // Most of the units rely on the orientation of the popper\n    const measurement = (index === 1 ? !useHeight : useHeight)\n      ? 'height'\n      : 'width';\n    let mergeWithPrevious = false;\n    return (\n      op\n        // This aggregates any `+` or `-` sign that aren't considered operators\n        // e.g.: 10 + +5 => [10, +, +5]\n        .reduce((a, b) => {\n          if (a[a.length - 1] === '' && ['+', '-'].indexOf(b) !== -1) {\n            a[a.length - 1] = b;\n            mergeWithPrevious = true;\n            return a;\n          } else if (mergeWithPrevious) {\n            a[a.length - 1] += b;\n            mergeWithPrevious = false;\n            return a;\n          } else {\n            return a.concat(b);\n          }\n        }, [])\n        // Here we convert the string values into number values (in px)\n        .map(str => toValue(str, measurement, popperOffsets, referenceOffsets))\n    );\n  });\n\n  // Loop trough the offsets arrays and execute the operations\n  ops.forEach((op, index) => {\n    op.forEach((frag, index2) => {\n      if (isNumeric(frag)) {\n        offsets[index] += frag * (op[index2 - 1] === '-' ? -1 : 1);\n      }\n    });\n  });\n  return offsets;\n}\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by update method\n * @argument {Object} options - Modifiers configuration and options\n * @argument {Number|String} options.offset=0\n * The offset value as described in the modifier description\n * @returns {Object} The data object, properly modified\n */\nexport default function offset(data, { offset }) {\n  const { placement, offsets: { popper, reference } } = data;\n  const basePlacement = placement.split('-')[0];\n\n  let offsets;\n  if (isNumeric(+offset)) {\n    offsets = [+offset, 0];\n  } else {\n    offsets = parseOffset(offset, popper, reference, basePlacement);\n  }\n\n  if (basePlacement === 'left') {\n    popper.top += offsets[0];\n    popper.left -= offsets[1];\n  } else if (basePlacement === 'right') {\n    popper.top += offsets[0];\n    popper.left += offsets[1];\n  } else if (basePlacement === 'top') {\n    popper.left += offsets[0];\n    popper.top -= offsets[1];\n  } else if (basePlacement === 'bottom') {\n    popper.left += offsets[0];\n    popper.top += offsets[1];\n  }\n\n  data.popper = popper;\n  return data;\n}\n","import getOffsetParent from '../utils/getOffsetParent';\nimport getBoundaries from '../utils/getBoundaries';\nimport getSupportedPropertyName from '../utils/getSupportedPropertyName';\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by `update` method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nexport default function preventOverflow(data, options) {\n  let boundariesElement =\n    options.boundariesElement || getOffsetParent(data.instance.popper);\n\n  // If offsetParent is the reference element, we really want to\n  // go one step up and use the next offsetParent as reference to\n  // avoid to make this modifier completely useless and look like broken\n  if (data.instance.reference === boundariesElement) {\n    boundariesElement = getOffsetParent(boundariesElement);\n  }\n\n  // NOTE: DOM access here\n  // resets the popper's position so that the document size can be calculated excluding\n  // the size of the popper element itself\n  const transformProp = getSupportedPropertyName('transform');\n  const popperStyles = data.instance.popper.style; // assignment to help minification\n  const { top, left, [transformProp]: transform } = popperStyles;\n  popperStyles.top = '';\n  popperStyles.left = '';\n  popperStyles[transformProp] = '';\n\n  const boundaries = getBoundaries(\n    data.instance.popper,\n    data.instance.reference,\n    options.padding,\n    boundariesElement,\n    data.positionFixed\n  );\n\n  // NOTE: DOM access here\n  // restores the original style properties after the offsets have been computed\n  popperStyles.top = top;\n  popperStyles.left = left;\n  popperStyles[transformProp] = transform;\n\n  options.boundaries = boundaries;\n\n  const order = options.priority;\n  let popper = data.offsets.popper;\n\n  const check = {\n    primary(placement) {\n      let value = popper[placement];\n      if (\n        popper[placement] < boundaries[placement] &&\n        !options.escapeWithReference\n      ) {\n        value = Math.max(popper[placement], boundaries[placement]);\n      }\n      return { [placement]: value };\n    },\n    secondary(placement) {\n      const mainSide = placement === 'right' ? 'left' : 'top';\n      let value = popper[mainSide];\n      if (\n        popper[placement] > boundaries[placement] &&\n        !options.escapeWithReference\n      ) {\n        value = Math.min(\n          popper[mainSide],\n          boundaries[placement] -\n            (placement === 'right' ? popper.width : popper.height)\n        );\n      }\n      return { [mainSide]: value };\n    },\n  };\n\n  order.forEach(placement => {\n    const side =\n      ['left', 'top'].indexOf(placement) !== -1 ? 'primary' : 'secondary';\n    popper = { ...popper, ...check[side](placement) };\n  });\n\n  data.offsets.popper = popper;\n\n  return data;\n}\n","/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by `update` method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nexport default function shift(data) {\n  const placement = data.placement;\n  const basePlacement = placement.split('-')[0];\n  const shiftvariation = placement.split('-')[1];\n\n  // if shift shiftvariation is specified, run the modifier\n  if (shiftvariation) {\n    const { reference, popper } = data.offsets;\n    const isVertical = ['bottom', 'top'].indexOf(basePlacement) !== -1;\n    const side = isVertical ? 'left' : 'top';\n    const measurement = isVertical ? 'width' : 'height';\n\n    const shiftOffsets = {\n      start: { [side]: reference[side] },\n      end: {\n        [side]: reference[side] + reference[measurement] - popper[measurement],\n      },\n    };\n\n    data.offsets.popper = { ...popper, ...shiftOffsets[shiftvariation] };\n  }\n\n  return data;\n}\n","import isModifierRequired from '../utils/isModifierRequired';\nimport find from '../utils/find';\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by update method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nexport default function hide(data) {\n  if (!isModifierRequired(data.instance.modifiers, 'hide', 'preventOverflow')) {\n    return data;\n  }\n\n  const refRect = data.offsets.reference;\n  const bound = find(\n    data.instance.modifiers,\n    modifier => modifier.name === 'preventOverflow'\n  ).boundaries;\n\n  if (\n    refRect.bottom < bound.top ||\n    refRect.left > bound.right ||\n    refRect.top > bound.bottom ||\n    refRect.right < bound.left\n  ) {\n    // Avoid unnecessary DOM access if visibility hasn't changed\n    if (data.hide === true) {\n      return data;\n    }\n\n    data.hide = true;\n    data.attributes['x-out-of-boundaries'] = '';\n  } else {\n    // Avoid unnecessary DOM access if visibility hasn't changed\n    if (data.hide === false) {\n      return data;\n    }\n\n    data.hide = false;\n    data.attributes['x-out-of-boundaries'] = false;\n  }\n\n  return data;\n}\n","import getClientRect from '../utils/getClientRect';\nimport getOppositePlacement from '../utils/getOppositePlacement';\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by `update` method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nexport default function inner(data) {\n  const placement = data.placement;\n  const basePlacement = placement.split('-')[0];\n  const { popper, reference } = data.offsets;\n  const isHoriz = ['left', 'right'].indexOf(basePlacement) !== -1;\n\n  const subtractLength = ['top', 'left'].indexOf(basePlacement) === -1;\n\n  popper[isHoriz ? 'left' : 'top'] =\n    reference[basePlacement] -\n    (subtractLength ? popper[isHoriz ? 'width' : 'height'] : 0);\n\n  data.placement = getOppositePlacement(placement);\n  data.offsets.popper = getClientRect(popper);\n\n  return data;\n}\n","import applyStyle, { applyStyleOnLoad } from './applyStyle';\nimport computeStyle from './computeStyle';\nimport arrow from './arrow';\nimport flip from './flip';\nimport keepTogether from './keepTogether';\nimport offset from './offset';\nimport preventOverflow from './preventOverflow';\nimport shift from './shift';\nimport hide from './hide';\nimport inner from './inner';\n\n/**\n * Modifier function, each modifier can have a function of this type assigned\n * to its `fn` property.<br />\n * These functions will be called on each update, this means that you must\n * make sure they are performant enough to avoid performance bottlenecks.\n *\n * @function ModifierFn\n * @argument {dataObject} data - The data object generated by `update` method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {dataObject} The data object, properly modified\n */\n\n/**\n * Modifiers are plugins used to alter the behavior of your poppers.<br />\n * Popper.js uses a set of 9 modifiers to provide all the basic functionalities\n * needed by the library.\n *\n * Usually you don't want to override the `order`, `fn` and `onLoad` props.\n * All the other properties are configurations that could be tweaked.\n * @namespace modifiers\n */\nexport default {\n  /**\n   * Modifier used to shift the popper on the start or end of its reference\n   * element.<br />\n   * It will read the variation of the `placement` property.<br />\n   * It can be one either `-end` or `-start`.\n   * @memberof modifiers\n   * @inner\n   */\n  shift: {\n    /** @prop {number} order=100 - Index used to define the order of execution */\n    order: 100,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: shift,\n  },\n\n  /**\n   * The `offset` modifier can shift your popper on both its axis.\n   *\n   * It accepts the following units:\n   * - `px` or unit-less, interpreted as pixels\n   * - `%` or `%r`, percentage relative to the length of the reference element\n   * - `%p`, percentage relative to the length of the popper element\n   * - `vw`, CSS viewport width unit\n   * - `vh`, CSS viewport height unit\n   *\n   * For length is intended the main axis relative to the placement of the popper.<br />\n   * This means that if the placement is `top` or `bottom`, the length will be the\n   * `width`. In case of `left` or `right`, it will be the `height`.\n   *\n   * You can provide a single value (as `Number` or `String`), or a pair of values\n   * as `String` divided by a comma or one (or more) white spaces.<br />\n   * The latter is a deprecated method because it leads to confusion and will be\n   * removed in v2.<br />\n   * Additionally, it accepts additions and subtractions between different units.\n   * Note that multiplications and divisions aren't supported.\n   *\n   * Valid examples are:\n   * ```\n   * 10\n   * '10%'\n   * '10, 10'\n   * '10%, 10'\n   * '10 + 10%'\n   * '10 - 5vh + 3%'\n   * '-10px + 5vh, 5px - 6%'\n   * ```\n   * > **NB**: If you desire to apply offsets to your poppers in a way that may make them overlap\n   * > with their reference element, unfortunately, you will have to disable the `flip` modifier.\n   * > You can read more on this at this [issue](https://github.com/FezVrasta/popper.js/issues/373).\n   *\n   * @memberof modifiers\n   * @inner\n   */\n  offset: {\n    /** @prop {number} order=200 - Index used to define the order of execution */\n    order: 200,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: offset,\n    /** @prop {Number|String} offset=0\n     * The offset value as described in the modifier description\n     */\n    offset: 0,\n  },\n\n  /**\n   * Modifier used to prevent the popper from being positioned outside the boundary.\n   *\n   * A scenario exists where the reference itself is not within the boundaries.<br />\n   * We can say it has \"escaped the boundaries\" — or just \"escaped\".<br />\n   * In this case we need to decide whether the popper should either:\n   *\n   * - detach from the reference and remain \"trapped\" in the boundaries, or\n   * - if it should ignore the boundary and \"escape with its reference\"\n   *\n   * When `escapeWithReference` is set to`true` and reference is completely\n   * outside its boundaries, the popper will overflow (or completely leave)\n   * the boundaries in order to remain attached to the edge of the reference.\n   *\n   * @memberof modifiers\n   * @inner\n   */\n  preventOverflow: {\n    /** @prop {number} order=300 - Index used to define the order of execution */\n    order: 300,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: preventOverflow,\n    /**\n     * @prop {Array} [priority=['left','right','top','bottom']]\n     * Popper will try to prevent overflow following these priorities by default,\n     * then, it could overflow on the left and on top of the `boundariesElement`\n     */\n    priority: ['left', 'right', 'top', 'bottom'],\n    /**\n     * @prop {number} padding=5\n     * Amount of pixel used to define a minimum distance between the boundaries\n     * and the popper. This makes sure the popper always has a little padding\n     * between the edges of its container\n     */\n    padding: 5,\n    /**\n     * @prop {String|HTMLElement} boundariesElement='scrollParent'\n     * Boundaries used by the modifier. Can be `scrollParent`, `window`,\n     * `viewport` or any DOM element.\n     */\n    boundariesElement: 'scrollParent',\n  },\n\n  /**\n   * Modifier used to make sure the reference and its popper stay near each other\n   * without leaving any gap between the two. Especially useful when the arrow is\n   * enabled and you want to ensure that it points to its reference element.\n   * It cares only about the first axis. You can still have poppers with margin\n   * between the popper and its reference element.\n   * @memberof modifiers\n   * @inner\n   */\n  keepTogether: {\n    /** @prop {number} order=400 - Index used to define the order of execution */\n    order: 400,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: keepTogether,\n  },\n\n  /**\n   * This modifier is used to move the `arrowElement` of the popper to make\n   * sure it is positioned between the reference element and its popper element.\n   * It will read the outer size of the `arrowElement` node to detect how many\n   * pixels of conjunction are needed.\n   *\n   * It has no effect if no `arrowElement` is provided.\n   * @memberof modifiers\n   * @inner\n   */\n  arrow: {\n    /** @prop {number} order=500 - Index used to define the order of execution */\n    order: 500,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: arrow,\n    /** @prop {String|HTMLElement} element='[x-arrow]' - Selector or node used as arrow */\n    element: '[x-arrow]',\n  },\n\n  /**\n   * Modifier used to flip the popper's placement when it starts to overlap its\n   * reference element.\n   *\n   * Requires the `preventOverflow` modifier before it in order to work.\n   *\n   * **NOTE:** this modifier will interrupt the current update cycle and will\n   * restart it if it detects the need to flip the placement.\n   * @memberof modifiers\n   * @inner\n   */\n  flip: {\n    /** @prop {number} order=600 - Index used to define the order of execution */\n    order: 600,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: flip,\n    /**\n     * @prop {String|Array} behavior='flip'\n     * The behavior used to change the popper's placement. It can be one of\n     * `flip`, `clockwise`, `counterclockwise` or an array with a list of valid\n     * placements (with optional variations)\n     */\n    behavior: 'flip',\n    /**\n     * @prop {number} padding=5\n     * The popper will flip if it hits the edges of the `boundariesElement`\n     */\n    padding: 5,\n    /**\n     * @prop {String|HTMLElement} boundariesElement='viewport'\n     * The element which will define the boundaries of the popper position.\n     * The popper will never be placed outside of the defined boundaries\n     * (except if `keepTogether` is enabled)\n     */\n    boundariesElement: 'viewport',\n    /**\n     * @prop {Boolean} flipVariations=false\n     * The popper will switch placement variation between `-start` and `-end` when\n     * the reference element overlaps its boundaries.\n     *\n     * The original placement should have a set variation.\n     */\n    flipVariations: false,\n    /**\n     * @prop {Boolean} flipVariationsByContent=false\n     * The popper will switch placement variation between `-start` and `-end` when\n     * the popper element overlaps its reference boundaries.\n     *\n     * The original placement should have a set variation.\n     */\n    flipVariationsByContent: false,\n  },\n\n  /**\n   * Modifier used to make the popper flow toward the inner of the reference element.\n   * By default, when this modifier is disabled, the popper will be placed outside\n   * the reference element.\n   * @memberof modifiers\n   * @inner\n   */\n  inner: {\n    /** @prop {number} order=700 - Index used to define the order of execution */\n    order: 700,\n    /** @prop {Boolean} enabled=false - Whether the modifier is enabled or not */\n    enabled: false,\n    /** @prop {ModifierFn} */\n    fn: inner,\n  },\n\n  /**\n   * Modifier used to hide the popper when its reference element is outside of the\n   * popper boundaries. It will set a `x-out-of-boundaries` attribute which can\n   * be used to hide with a CSS selector the popper when its reference is\n   * out of boundaries.\n   *\n   * Requires the `preventOverflow` modifier before it in order to work.\n   * @memberof modifiers\n   * @inner\n   */\n  hide: {\n    /** @prop {number} order=800 - Index used to define the order of execution */\n    order: 800,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: hide,\n  },\n\n  /**\n   * Computes the style that will be applied to the popper element to gets\n   * properly positioned.\n   *\n   * Note that this modifier will not touch the DOM, it just prepares the styles\n   * so that `applyStyle` modifier can apply it. This separation is useful\n   * in case you need to replace `applyStyle` with a custom implementation.\n   *\n   * This modifier has `850` as `order` value to maintain backward compatibility\n   * with previous versions of Popper.js. Expect the modifiers ordering method\n   * to change in future major versions of the library.\n   *\n   * @memberof modifiers\n   * @inner\n   */\n  computeStyle: {\n    /** @prop {number} order=850 - Index used to define the order of execution */\n    order: 850,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: computeStyle,\n    /**\n     * @prop {Boolean} gpuAcceleration=true\n     * If true, it uses the CSS 3D transformation to position the popper.\n     * Otherwise, it will use the `top` and `left` properties\n     */\n    gpuAcceleration: true,\n    /**\n     * @prop {string} [x='bottom']\n     * Where to anchor the X axis (`bottom` or `top`). AKA X offset origin.\n     * Change this if your popper should grow in a direction different from `bottom`\n     */\n    x: 'bottom',\n    /**\n     * @prop {string} [x='left']\n     * Where to anchor the Y axis (`left` or `right`). AKA Y offset origin.\n     * Change this if your popper should grow in a direction different from `right`\n     */\n    y: 'right',\n  },\n\n  /**\n   * Applies the computed styles to the popper element.\n   *\n   * All the DOM manipulations are limited to this modifier. This is useful in case\n   * you want to integrate Popper.js inside a framework or view library and you\n   * want to delegate all the DOM manipulations to it.\n   *\n   * Note that if you disable this modifier, you must make sure the popper element\n   * has its position set to `absolute` before Popper.js can do its work!\n   *\n   * Just disable this modifier and define your own to achieve the desired effect.\n   *\n   * @memberof modifiers\n   * @inner\n   */\n  applyStyle: {\n    /** @prop {number} order=900 - Index used to define the order of execution */\n    order: 900,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: applyStyle,\n    /** @prop {Function} */\n    onLoad: applyStyleOnLoad,\n    /**\n     * @deprecated since version 1.10.0, the property moved to `computeStyle` modifier\n     * @prop {Boolean} gpuAcceleration=true\n     * If true, it uses the CSS 3D transformation to position the popper.\n     * Otherwise, it will use the `top` and `left` properties\n     */\n    gpuAcceleration: undefined,\n  },\n};\n\n/**\n * The `dataObject` is an object containing all the information used by Popper.js.\n * This object is passed to modifiers and to the `onCreate` and `onUpdate` callbacks.\n * @name dataObject\n * @property {Object} data.instance The Popper.js instance\n * @property {String} data.placement Placement applied to popper\n * @property {String} data.originalPlacement Placement originally defined on init\n * @property {Boolean} data.flipped True if popper has been flipped by flip modifier\n * @property {Boolean} data.hide True if the reference element is out of boundaries, useful to know when to hide the popper\n * @property {HTMLElement} data.arrowElement Node used as arrow by arrow modifier\n * @property {Object} data.styles Any CSS property defined here will be applied to the popper. It expects the JavaScript nomenclature (eg. `marginBottom`)\n * @property {Object} data.arrowStyles Any CSS property defined here will be applied to the popper arrow. It expects the JavaScript nomenclature (eg. `marginBottom`)\n * @property {Object} data.boundaries Offsets of the popper boundaries\n * @property {Object} data.offsets The measurements of popper, reference and arrow elements\n * @property {Object} data.offsets.popper `top`, `left`, `width`, `height` values\n * @property {Object} data.offsets.reference `top`, `left`, `width`, `height` values\n * @property {Object} data.offsets.arrow] `top` and `left` offsets, only one of them will be different from 0\n */\n","import modifiers from '../modifiers/index';\n\n/**\n * Default options provided to Popper.js constructor.<br />\n * These can be overridden using the `options` argument of Popper.js.<br />\n * To override an option, simply pass an object with the same\n * structure of the `options` object, as the 3rd argument. For example:\n * ```\n * new Popper(ref, pop, {\n *   modifiers: {\n *     preventOverflow: { enabled: false }\n *   }\n * })\n * ```\n * @type {Object}\n * @static\n * @memberof Popper\n */\nexport default {\n  /**\n   * Popper's placement.\n   * @prop {Popper.placements} placement='bottom'\n   */\n  placement: 'bottom',\n\n  /**\n   * Set this to true if you want popper to position it self in 'fixed' mode\n   * @prop {Boolean} positionFixed=false\n   */\n  positionFixed: false,\n\n  /**\n   * Whether events (resize, scroll) are initially enabled.\n   * @prop {Boolean} eventsEnabled=true\n   */\n  eventsEnabled: true,\n\n  /**\n   * Set to true if you want to automatically remove the popper when\n   * you call the `destroy` method.\n   * @prop {Boolean} removeOnDestroy=false\n   */\n  removeOnDestroy: false,\n\n  /**\n   * Callback called when the popper is created.<br />\n   * By default, it is set to no-op.<br />\n   * Access Popper.js instance with `data.instance`.\n   * @prop {onCreate}\n   */\n  onCreate: () => {},\n\n  /**\n   * Callback called when the popper is updated. This callback is not called\n   * on the initialization/creation of the popper, but only on subsequent\n   * updates.<br />\n   * By default, it is set to no-op.<br />\n   * Access Popper.js instance with `data.instance`.\n   * @prop {onUpdate}\n   */\n  onUpdate: () => {},\n\n  /**\n   * List of modifiers used to modify the offsets before they are applied to the popper.\n   * They provide most of the functionalities of Popper.js.\n   * @prop {modifiers}\n   */\n  modifiers,\n};\n\n/**\n * @callback onCreate\n * @param {dataObject} data\n */\n\n/**\n * @callback onUpdate\n * @param {dataObject} data\n */\n","import { version } from '../../package.json'\nimport { isBrowser } from './browser'\nimport Defaults from './defaults'\nimport createTippy from './createTippy'\nimport bindGlobalEventListeners from './bindGlobalEventListeners'\nimport { polyfillElementPrototypeProperties } from './reference'\nimport { validateOptions } from './props'\nimport { arrayFrom } from './ponyfills'\nimport { hideAllPoppers } from './popper'\nimport { isPlainObject, getArrayOfElements } from './utils'\n\nlet globalEventListenersBound = false\n\n/**\n * Exported module\n * @param {String|Element|Element[]|NodeList|Object} targets\n * @param {Object} options\n * @param {Boolean} one\n * @return {Object}\n */\nfunction tippy(targets, options, one) {\n  validateOptions(options, Defaults)\n\n  if (!globalEventListenersBound) {\n    bindGlobalEventListeners()\n    globalEventListenersBound = true\n  }\n\n  const props = { ...Defaults, ...options }\n\n  /**\n   * If they are specifying a virtual positioning reference, we need to polyfill\n   * some native DOM props\n   */\n  if (isPlainObject(targets)) {\n    polyfillElementPrototypeProperties(targets)\n  }\n\n  const references = getArrayOfElements(targets)\n  const firstReference = references[0]\n\n  const instances = (one && firstReference\n    ? [firstReference]\n    : references\n  ).reduce((acc, reference) => {\n    const tip = reference && createTippy(reference, props)\n    if (tip) {\n      acc.push(tip)\n    }\n    return acc\n  }, [])\n\n  const collection = {\n    targets,\n    props,\n    instances,\n    destroyAll() {\n      collection.instances.forEach(instance => {\n        instance.destroy()\n      })\n      collection.instances = []\n    },\n  }\n\n  return collection\n}\n\n/**\n * Static props\n */\ntippy.version = version\ntippy.defaults = Defaults\n\n/**\n * Static methods\n */\ntippy.one = (targets, options) => tippy(targets, options, true).instances[0]\ntippy.setDefaults = partialDefaults => {\n  Object.keys(partialDefaults).forEach(key => {\n    Defaults[key] = partialDefaults[key]\n  })\n}\ntippy.disableAnimations = () => {\n  tippy.setDefaults({\n    duration: 0,\n    updateDuration: 0,\n    animateFill: false,\n  })\n}\ntippy.hideAllPoppers = hideAllPoppers\n// noop: deprecated static method as capture phase is now default\ntippy.useCapture = () => {}\n\n/**\n * Auto-init tooltips for elements with a `data-tippy=\"...\"` attribute\n */\nexport const autoInit = () => {\n  arrayFrom(document.querySelectorAll('[data-tippy]')).forEach(el => {\n    const content = el.getAttribute('data-tippy')\n    if (content) {\n      tippy(el, { content })\n    }\n  })\n}\nif (isBrowser) {\n  setTimeout(autoInit)\n}\n\nexport default tippy\n","export const isBrowser = typeof window !== 'undefined'\n\nconst nav = isBrowser ? navigator : {}\nconst win = isBrowser ? window : {}\n\nexport const isBrowserSupported = 'MutationObserver' in win\nexport const isIE = /MSIE |Trident\\//.test(nav.userAgent)\nexport const isIOS = /iPhone|iPad|iPod/.test(nav.platform) && !win.MSStream\nexport const supportsTouch = 'ontouchstart' in win\n","export default {\n  a11y: true,\n  allowHTML: true,\n  animateFill: true,\n  animation: 'shift-away',\n  appendTo: () => document.body,\n  aria: 'describedby',\n  arrow: false,\n  arrowTransform: '',\n  arrowType: 'sharp',\n  autoFocus: true,\n  boundary: 'scrollParent',\n  content: '',\n  delay: [0, 20],\n  distance: 10,\n  duration: [325, 275],\n  flip: true,\n  flipBehavior: 'flip',\n  followCursor: false,\n  hideOnClick: true,\n  inertia: false,\n  interactive: false,\n  interactiveBorder: 2,\n  interactiveDebounce: 0,\n  lazy: true,\n  livePlacement: true,\n  maxWidth: '',\n  multiple: false,\n  offset: 0,\n  onHidden() {},\n  onHide() {},\n  onMount() {},\n  onShow() {},\n  onShown() {},\n  performance: false,\n  placement: 'top',\n  popperOptions: {},\n  shouldPopperHideOnBlur: () => true,\n  showOnInit: false,\n  size: 'regular',\n  sticky: false,\n  target: '',\n  theme: 'dark',\n  touch: true,\n  touchHold: false,\n  trigger: 'mouseenter focus',\n  updateDuration: 200,\n  wait: null,\n  zIndex: 9999,\n}\n\n/**\n * If the set() method encounters one of these, the popperInstance must be\n * recreated\n */\nexport const POPPER_INSTANCE_RELATED_PROPS = [\n  'arrow',\n  'arrowType',\n  'distance',\n  'flip',\n  'flipBehavior',\n  'offset',\n  'placement',\n  'popperOptions',\n]\n","export default {\n  POPPER: '.tippy-popper',\n  TOOLTIP: '.tippy-tooltip',\n  CONTENT: '.tippy-content',\n  BACKDROP: '.tippy-backdrop',\n  ARROW: '.tippy-arrow',\n  ROUND_ARROW: '.tippy-roundarrow',\n}\n","import { isBrowser } from './browser'\n\nconst elementProto = isBrowser ? Element.prototype : {}\n\nexport const matches =\n  elementProto.matches ||\n  elementProto.matchesSelector ||\n  elementProto.webkitMatchesSelector ||\n  elementProto.mozMatchesSelector ||\n  elementProto.msMatchesSelector\n\n/**\n * Ponyfill for Array.from - converts iterable values to an array\n * @param {Array-like} value\n * @return {Array}\n */\nexport function arrayFrom(value) {\n  return [].slice.call(value)\n}\n\n/**\n * Ponyfill for Element.prototype.closest\n * @param {Element} element\n * @param {String} parentSelector\n * @return {Element}\n */\nexport function closest(element, parentSelector) {\n  return (\n    elementProto.closest ||\n    function(selector) {\n      let el = this\n      while (el) {\n        if (matches.call(el, selector)) return el\n        el = el.parentElement\n      }\n    }\n  ).call(element, parentSelector)\n}\n\n/**\n * Works like Element.prototype.closest, but uses a callback instead\n * @param {Element} element\n * @param {Function} callback\n * @return {Element}\n */\nexport function closestCallback(element, callback) {\n  while (element) {\n    if (callback(element)) return element\n    element = element.parentElement\n  }\n}\n","export const PASSIVE = { passive: true }\nexport const FF_EXTENSION_TRICK = { x: true }\n","import Selectors from './selectors'\nimport { arrayFrom, closestCallback } from './ponyfills'\nimport { FF_EXTENSION_TRICK } from './constants'\n\n/**\n * Returns a new `div` element\n * @return {HTMLDivElement}\n */\nexport function div() {\n  return document.createElement('div')\n}\n\n/**\n * Sets the innerHTML of an element while tricking linters & minifiers\n * @param {HTMLElement} el\n * @param {Element|String} html\n */\nexport function setInnerHTML(el, html) {\n  el[FF_EXTENSION_TRICK.x && 'innerHTML'] =\n    html instanceof Element ? html[FF_EXTENSION_TRICK.x && 'innerHTML'] : html\n}\n\n/**\n * Sets the content of a tooltip\n * @param {HTMLElement} contentEl\n * @param {Object} props\n */\nexport function setContent(contentEl, props) {\n  if (props.content instanceof Element) {\n    setInnerHTML(contentEl, '')\n    contentEl.appendChild(props.content)\n  } else {\n    contentEl[props.allowHTML ? 'innerHTML' : 'textContent'] = props.content\n  }\n}\n\n/**\n * Returns the child elements of a popper element\n * @param {HTMLElement} popper\n */\nexport function getChildren(popper) {\n  return {\n    tooltip: popper.querySelector(Selectors.TOOLTIP),\n    backdrop: popper.querySelector(Selectors.BACKDROP),\n    content: popper.querySelector(Selectors.CONTENT),\n    arrow:\n      popper.querySelector(Selectors.ARROW) ||\n      popper.querySelector(Selectors.ROUND_ARROW),\n  }\n}\n\n/**\n * Adds `data-inertia` attribute\n * @param {HTMLElement} tooltip\n */\nexport function addInertia(tooltip) {\n  tooltip.setAttribute('data-inertia', '')\n}\n\n/**\n * Removes `data-inertia` attribute\n * @param {HTMLElement} tooltip\n */\nexport function removeInertia(tooltip) {\n  tooltip.removeAttribute('data-inertia')\n}\n\n/**\n * Creates an arrow element and returns it\n */\nexport function createArrowElement(arrowType) {\n  const arrow = div()\n  if (arrowType === 'round') {\n    arrow.className = 'tippy-roundarrow'\n    setInnerHTML(\n      arrow,\n      '<svg viewBox=\"0 0 24 8\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M3 8s2.021-.015 5.253-4.218C9.584 2.051 10.797 1.007 12 1c1.203-.007 2.416 1.035 3.761 2.782C19.012 8.005 21 8 21 8H3z\"/></svg>',\n    )\n  } else {\n    arrow.className = 'tippy-arrow'\n  }\n  return arrow\n}\n\n/**\n * Creates a backdrop element and returns it\n */\nexport function createBackdropElement() {\n  const backdrop = div()\n  backdrop.className = 'tippy-backdrop'\n  backdrop.setAttribute('data-state', 'hidden')\n  return backdrop\n}\n\n/**\n * Adds interactive-related attributes\n * @param {HTMLElement} popper\n * @param {HTMLElement} tooltip\n */\nexport function addInteractive(popper, tooltip) {\n  popper.setAttribute('tabindex', '-1')\n  tooltip.setAttribute('data-interactive', '')\n}\n\n/**\n * Removes interactive-related attributes\n * @param {HTMLElement} popper\n * @param {HTMLElement} tooltip\n */\nexport function removeInteractive(popper, tooltip) {\n  popper.removeAttribute('tabindex')\n  tooltip.removeAttribute('data-interactive')\n}\n\n/**\n * Applies a transition duration to a list of elements\n * @param {Array} els\n * @param {Number} value\n */\nexport function applyTransitionDuration(els, value) {\n  els.forEach(el => {\n    if (el) {\n      el.style.transitionDuration = `${value}ms`\n    }\n  })\n}\n\n/**\n * Add/remove transitionend listener from tooltip\n * @param {Element} tooltip\n * @param {String} action\n * @param {Function} listener\n */\nexport function toggleTransitionEndListener(tooltip, action, listener) {\n  tooltip[action + 'EventListener']('transitionend', listener)\n}\n\n/**\n * Returns the popper's placement, ignoring shifting (top-start, etc)\n * @param {Element} popper\n * @return {String}\n */\nexport function getPopperPlacement(popper) {\n  const fullPlacement = popper.getAttribute('x-placement')\n  return fullPlacement ? fullPlacement.split('-')[0] : ''\n}\n\n/**\n * Sets the visibility state to elements so they can begin to transition\n * @param {Array} els\n * @param {String} state\n */\nexport function setVisibilityState(els, state) {\n  els.forEach(el => {\n    if (el) {\n      el.setAttribute('data-state', state)\n    }\n  })\n}\n\n/**\n * Triggers reflow\n * @param {Element} popper\n */\nexport function reflow(popper) {\n  void popper.offsetHeight\n}\n\n/**\n * Constructs the popper element and returns it\n * @param {Number} id\n * @param {Object} props\n */\nexport function createPopperElement(id, props) {\n  const popper = div()\n  popper.className = 'tippy-popper'\n  popper.setAttribute('role', 'tooltip')\n  popper.id = `tippy-${id}`\n  popper.style.zIndex = props.zIndex\n\n  const tooltip = div()\n  tooltip.className = 'tippy-tooltip'\n  tooltip.style.maxWidth =\n    props.maxWidth + (typeof props.maxWidth === 'number' ? 'px' : '')\n  tooltip.setAttribute('data-size', props.size)\n  tooltip.setAttribute('data-animation', props.animation)\n  tooltip.setAttribute('data-state', 'hidden')\n  props.theme.split(' ').forEach(t => {\n    tooltip.classList.add(t + '-theme')\n  })\n\n  const content = div()\n  content.className = 'tippy-content'\n  content.setAttribute('data-state', 'hidden')\n\n  if (props.interactive) {\n    addInteractive(popper, tooltip)\n  }\n\n  if (props.arrow) {\n    tooltip.appendChild(createArrowElement(props.arrowType))\n  }\n\n  if (props.animateFill) {\n    tooltip.appendChild(createBackdropElement())\n    tooltip.setAttribute('data-animatefill', '')\n  }\n\n  if (props.inertia) {\n    addInertia(tooltip)\n  }\n\n  setContent(content, props)\n\n  tooltip.appendChild(content)\n  popper.appendChild(tooltip)\n\n  popper.addEventListener('focusout', e => {\n    if (\n      e.relatedTarget &&\n      popper._tippy &&\n      !closestCallback(e.relatedTarget, el => el === popper) &&\n      e.relatedTarget !== popper._tippy.reference &&\n      popper._tippy.props.shouldPopperHideOnBlur(e)\n    ) {\n      popper._tippy.hide()\n    }\n  })\n\n  return popper\n}\n\n/**\n * Updates the popper element based on the new props\n * @param {HTMLElement} popper\n * @param {Object} prevProps\n * @param {Object} nextProps\n */\nexport function updatePopperElement(popper, prevProps, nextProps) {\n  const { tooltip, content, backdrop, arrow } = getChildren(popper)\n\n  popper.style.zIndex = nextProps.zIndex\n  tooltip.setAttribute('data-size', nextProps.size)\n  tooltip.setAttribute('data-animation', nextProps.animation)\n  tooltip.style.maxWidth =\n    nextProps.maxWidth + (typeof nextProps.maxWidth === 'number' ? 'px' : '')\n\n  if (prevProps.content !== nextProps.content) {\n    setContent(content, nextProps)\n  }\n\n  // animateFill\n  if (!prevProps.animateFill && nextProps.animateFill) {\n    tooltip.appendChild(createBackdropElement())\n    tooltip.setAttribute('data-animatefill', '')\n  } else if (prevProps.animateFill && !nextProps.animateFill) {\n    tooltip.removeChild(backdrop)\n    tooltip.removeAttribute('data-animatefill')\n  }\n\n  // arrow\n  if (!prevProps.arrow && nextProps.arrow) {\n    tooltip.appendChild(createArrowElement(nextProps.arrowType))\n  } else if (prevProps.arrow && !nextProps.arrow) {\n    tooltip.removeChild(arrow)\n  }\n\n  // arrowType\n  if (\n    prevProps.arrow &&\n    nextProps.arrow &&\n    prevProps.arrowType !== nextProps.arrowType\n  ) {\n    tooltip.replaceChild(createArrowElement(nextProps.arrowType), arrow)\n  }\n\n  // interactive\n  if (!prevProps.interactive && nextProps.interactive) {\n    addInteractive(popper, tooltip)\n  } else if (prevProps.interactive && !nextProps.interactive) {\n    removeInteractive(popper, tooltip)\n  }\n\n  // inertia\n  if (!prevProps.inertia && nextProps.inertia) {\n    addInertia(tooltip)\n  } else if (prevProps.inertia && !nextProps.inertia) {\n    removeInertia(tooltip)\n  }\n\n  // theme\n  if (prevProps.theme !== nextProps.theme) {\n    prevProps.theme.split(' ').forEach(theme => {\n      tooltip.classList.remove(theme + '-theme')\n    })\n    nextProps.theme.split(' ').forEach(theme => {\n      tooltip.classList.add(theme + '-theme')\n    })\n  }\n}\n\n/**\n * Runs the callback after the popper's position has been updated\n * update() is debounced with Promise.resolve() or setTimeout()\n * scheduleUpdate() is update() wrapped in requestAnimationFrame()\n * @param {Popper} popperInstance\n * @param {Function} callback\n */\nexport function afterPopperPositionUpdates(popperInstance, callback) {\n  const { popper, options } = popperInstance\n  const { onCreate, onUpdate } = options\n\n  options.onCreate = options.onUpdate = () => {\n    reflow(popper)\n    callback()\n    onUpdate()\n    options.onCreate = onCreate\n    options.onUpdate = onUpdate\n  }\n}\n\n/**\n * Hides all visible poppers on the document, optionally excluding one\n * @param {Tippy} tippyInstanceToExclude\n */\nexport function hideAllPoppers(tippyInstanceToExclude) {\n  arrayFrom(document.querySelectorAll(Selectors.POPPER)).forEach(popper => {\n    const tip = popper._tippy\n    if (\n      tip &&\n      tip.props.hideOnClick === true &&\n      (!tippyInstanceToExclude || popper !== tippyInstanceToExclude.popper)\n    ) {\n      tip.hide()\n    }\n  })\n}\n\n/**\n * Determines if the mouse cursor is outside of the popper's interactive border\n * region\n * @param {String} popperPlacement\n * @param {Object} popperRect\n * @param {MouseEvent} event\n * @param {Object} props\n */\nexport function isCursorOutsideInteractiveBorder(\n  popperPlacement,\n  popperRect,\n  event,\n  props,\n) {\n  if (!popperPlacement) {\n    return true\n  }\n\n  const { clientX: x, clientY: y } = event\n  const { interactiveBorder, distance } = props\n\n  const exceedsTop =\n    popperRect.top - y >\n    (popperPlacement === 'top'\n      ? interactiveBorder + distance\n      : interactiveBorder)\n\n  const exceedsBottom =\n    y - popperRect.bottom >\n    (popperPlacement === 'bottom'\n      ? interactiveBorder + distance\n      : interactiveBorder)\n\n  const exceedsLeft =\n    popperRect.left - x >\n    (popperPlacement === 'left'\n      ? interactiveBorder + distance\n      : interactiveBorder)\n\n  const exceedsRight =\n    x - popperRect.right >\n    (popperPlacement === 'right'\n      ? interactiveBorder + distance\n      : interactiveBorder)\n\n  return exceedsTop || exceedsBottom || exceedsLeft || exceedsRight\n}\n\n/**\n * Returns the distance offset, taking into account the default offset due to\n * the transform: translate() rule in CSS\n * @param {Number} distance\n * @param {Number} defaultDistance\n */\nexport function getOffsetDistanceInPx(distance, defaultDistance) {\n  return -(distance - defaultDistance) + 'px'\n}\n","import { arrayFrom } from './ponyfills'\n\n/**\n * Determines if a value is a plain object\n * @param {any} value\n * @return {Boolean}\n */\nexport function isPlainObject(value) {\n  return {}.toString.call(value) === '[object Object]'\n}\n\n/**\n * Safe .hasOwnProperty check, for prototype-less objects\n * @param {Object} obj\n * @param {String} key\n * @return {Boolean}\n */\nexport function hasOwnProperty(obj, key) {\n  return {}.hasOwnProperty.call(obj, key)\n}\n\n/**\n * Determines if a value is numeric\n * @param {any} value\n * @return {Boolean}\n */\nexport function isNumeric(value) {\n  return !isNaN(value) && !isNaN(parseFloat(value))\n}\n\n/**\n * Returns an array of elements based on the value\n * @param {any} value\n * @return {Array}\n */\nexport function getArrayOfElements(value) {\n  if (value instanceof Element || isPlainObject(value)) {\n    return [value]\n  }\n  if (value instanceof NodeList) {\n    return arrayFrom(value)\n  }\n  if (Array.isArray(value)) {\n    return value\n  }\n\n  try {\n    return arrayFrom(document.querySelectorAll(value))\n  } catch (e) {\n    return []\n  }\n}\n\n/**\n * Returns a value at a given index depending on if it's an array or number\n * @param {any} value\n * @param {Number} index\n * @param {any} defaultValue\n */\nexport function getValue(value, index, defaultValue) {\n  if (Array.isArray(value)) {\n    const v = value[index]\n    return v == null ? defaultValue : v\n  }\n  return value\n}\n\n/**\n * Focuses an element while preventing a scroll jump if it's not within the\n * viewport\n * @param {Element} el\n */\nexport function focus(el) {\n  const x = window.scrollX || window.pageXOffset\n  const y = window.scrollY || window.pageYOffset\n  el.focus()\n  scroll(x, y)\n}\n\n/**\n * Defers a function's execution until the call stack has cleared\n * @param {Function} fn\n */\nexport function defer(fn) {\n  setTimeout(fn, 1)\n}\n\n/**\n * Debounce utility\n * @param {Function} fn\n * @param {Number} ms\n */\nexport function debounce(fn, ms) {\n  let timeoutId\n  return function() {\n    clearTimeout(timeoutId)\n    timeoutId = setTimeout(() => fn.apply(this, arguments), ms)\n  }\n}\n\n/**\n * Prevents errors from being thrown while accessing nested modifier objects\n * in `popperOptions`\n * @param {Object} obj\n * @param {String} key\n * @return {Object|undefined}\n */\nexport function getModifier(obj, key) {\n  return obj && obj.modifiers && obj.modifiers[key]\n}\n\n/**\n * Determines if an array or string includes a value\n * @param {Array|String} a\n * @param {any} b\n * @return {Boolean}\n */\nexport function includes(a, b) {\n  return a.indexOf(b) > -1\n}\n","import { supportsTouch, isIOS } from './browser'\nimport Selectors from './selectors'\nimport { hideAllPoppers } from './popper'\nimport { closest, closestCallback, arrayFrom } from './ponyfills'\nimport { includes } from './utils'\nimport { PASSIVE } from './constants'\n\nexport let isUsingTouch = false\n\nexport function onDocumentTouch() {\n  if (isUsingTouch) {\n    return\n  }\n\n  isUsingTouch = true\n\n  if (isIOS) {\n    document.body.classList.add('tippy-iOS')\n  }\n\n  if (window.performance) {\n    document.addEventListener('mousemove', onDocumentMouseMove)\n  }\n}\n\nlet lastMouseMoveTime = 0\nexport function onDocumentMouseMove() {\n  const now = performance.now()\n\n  // Chrome 60+ is 1 mousemove per animation frame, use 20ms time difference\n  if (now - lastMouseMoveTime < 20) {\n    isUsingTouch = false\n    document.removeEventListener('mousemove', onDocumentMouseMove)\n    if (!isIOS) {\n      document.body.classList.remove('tippy-iOS')\n    }\n  }\n\n  lastMouseMoveTime = now\n}\n\nexport function onDocumentClick({ target }) {\n  // Simulated events dispatched on the document\n  if (!(target instanceof Element)) {\n    return hideAllPoppers()\n  }\n\n  // Clicked on an interactive popper\n  const popper = closest(target, Selectors.POPPER)\n  if (popper && popper._tippy && popper._tippy.props.interactive) {\n    return\n  }\n\n  // Clicked on a reference\n  const reference = closestCallback(\n    target,\n    el => el._tippy && el._tippy.reference === el,\n  )\n  if (reference) {\n    const tip = reference._tippy\n    const isClickTrigger = includes(tip.props.trigger, 'click')\n\n    if (isUsingTouch || isClickTrigger) {\n      return hideAllPoppers(tip)\n    }\n\n    if (tip.props.hideOnClick !== true || isClickTrigger) {\n      return\n    }\n\n    tip.clearDelayTimeouts()\n  }\n\n  hideAllPoppers()\n}\n\nexport function onWindowBlur() {\n  const { activeElement } = document\n  if (activeElement && activeElement.blur && activeElement._tippy) {\n    activeElement.blur()\n  }\n}\n\nexport function onWindowResize() {\n  arrayFrom(document.querySelectorAll(Selectors.POPPER)).forEach(popper => {\n    const tippyInstance = popper._tippy\n    if (!tippyInstance.props.livePlacement) {\n      tippyInstance.popperInstance.scheduleUpdate()\n    }\n  })\n}\n\n/**\n * Adds the needed global event listeners\n */\nexport default function bindGlobalEventListeners() {\n  document.addEventListener('click', onDocumentClick, true)\n  document.addEventListener('touchstart', onDocumentTouch, PASSIVE)\n  window.addEventListener('blur', onWindowBlur)\n  window.addEventListener('resize', onWindowResize)\n\n  if (\n    !supportsTouch &&\n    (navigator.maxTouchPoints || navigator.msMaxTouchPoints)\n  ) {\n    document.addEventListener('pointerdown', onDocumentTouch)\n  }\n}\n","import Defaults from './defaults'\nimport { matches } from './ponyfills'\nimport { isNumeric } from './utils'\n\nconst keys = Object.keys(Defaults)\n\n/**\n * Determines if an element can receive focus\n * @param {Element} el\n * @return {Boolean}\n */\nexport function canReceiveFocus(el) {\n  return el instanceof Element\n    ? matches.call(\n        el,\n        'a[href],area[href],button,details,input,textarea,select,iframe,[tabindex]',\n      ) && !el.hasAttribute('disabled')\n    : true\n}\n\n/**\n * Returns an object of optional props from data-tippy-* attributes\n * @param {Element} reference\n * @return {Object}\n */\nexport function getDataAttributeOptions(reference) {\n  return keys.reduce((acc, key) => {\n    const valueAsString = (\n      reference.getAttribute(`data-tippy-${key}`) || ''\n    ).trim()\n\n    if (!valueAsString) {\n      return acc\n    }\n\n    if (key === 'content') {\n      acc[key] = valueAsString\n    } else if (valueAsString === 'true') {\n      acc[key] = true\n    } else if (valueAsString === 'false') {\n      acc[key] = false\n    } else if (isNumeric(valueAsString)) {\n      acc[key] = Number(valueAsString)\n    } else if (valueAsString[0] === '[' || valueAsString[0] === '{') {\n      acc[key] = JSON.parse(valueAsString)\n    } else {\n      acc[key] = valueAsString\n    }\n\n    return acc\n  }, {})\n}\n\n/**\n * Polyfills the virtual reference (plain object) with Element.prototype props\n * Mutating because DOM elements are mutated, adds `_tippy` property\n * @param {Object} virtualReference\n * @return {Object}\n */\nexport function polyfillElementPrototypeProperties(virtualReference) {\n  const polyfills = {\n    isVirtual: true,\n    attributes: virtualReference.attributes || {},\n    setAttribute(key, value) {\n      virtualReference.attributes[key] = value\n    },\n    getAttribute(key) {\n      return virtualReference.attributes[key]\n    },\n    removeAttribute(key) {\n      delete virtualReference.attributes[key]\n    },\n    hasAttribute(key) {\n      return key in virtualReference.attributes\n    },\n    addEventListener() {},\n    removeEventListener() {},\n    classList: {\n      classNames: {},\n      add(key) {\n        virtualReference.classList.classNames[key] = true\n      },\n      remove(key) {\n        delete virtualReference.classList.classNames[key]\n      },\n      contains(key) {\n        return key in virtualReference.classList.classNames\n      },\n    },\n  }\n\n  for (const key in polyfills) {\n    virtualReference[key] = polyfills[key]\n  }\n}\n","import { getDataAttributeOptions } from './reference'\nimport { hasOwnProperty } from './utils'\n\n/**\n * Evaluates the props object\n * @param {Element} reference\n * @param {Object} props\n * @return {Object}\n */\nexport function evaluateProps(reference, props) {\n  const out = {\n    ...props,\n    ...(props.performance ? {} : getDataAttributeOptions(reference)),\n  }\n\n  if (out.arrow) {\n    out.animateFill = false\n  }\n\n  if (typeof out.appendTo === 'function') {\n    out.appendTo = props.appendTo(reference)\n  }\n\n  if (typeof out.content === 'function') {\n    out.content = props.content(reference)\n  }\n\n  return out\n}\n\n/**\n * Validates an object of options with the valid default props object\n * @param {Object} options\n * @param {Object} defaults\n */\nexport function validateOptions(options = {}, defaults) {\n  Object.keys(options).forEach(option => {\n    if (!hasOwnProperty(defaults, option)) {\n      throw new Error(`[tippy]: \\`${option}\\` is not a valid option`)\n    }\n  })\n}\n","import Selectors from './selectors'\nimport { getPopperPlacement } from './popper'\nimport { closest } from './ponyfills'\nimport { includes } from './utils'\n\n// =============================================================================\n// DEPRECATED\n// All of this code (for the `arrowTransform` option) will be removed in v4\n// =============================================================================\nexport const TRANSFORM_NUMBER_RE = {\n  translate: /translateX?Y?\\(([^)]+)\\)/,\n  scale: /scaleX?Y?\\(([^)]+)\\)/,\n}\n\n/**\n * Transforms the x/y axis based on the placement\n */\nexport function transformAxisBasedOnPlacement(axis, isVertical) {\n  return (\n    (isVertical\n      ? axis\n      : {\n          X: 'Y',\n          Y: 'X',\n        }[axis]) || ''\n  )\n}\n\n/**\n * Transforms the scale/translate numbers based on the placement\n */\nexport function transformNumbersBasedOnPlacement(\n  type,\n  numbers,\n  isVertical,\n  isReverse,\n) {\n  /**\n   * Avoid destructuring because a large boilerplate function is generated\n   * by Babel\n   */\n  const a = numbers[0]\n  const b = numbers[1]\n\n  if (!a && !b) {\n    return ''\n  }\n\n  const transforms = {\n    scale: (() => {\n      if (!b) {\n        return `${a}`\n      } else {\n        return isVertical ? `${a}, ${b}` : `${b}, ${a}`\n      }\n    })(),\n    translate: (() => {\n      if (!b) {\n        return isReverse ? `${-a}px` : `${a}px`\n      } else {\n        if (isVertical) {\n          return isReverse ? `${a}px, ${-b}px` : `${a}px, ${b}px`\n        } else {\n          return isReverse ? `${-b}px, ${a}px` : `${b}px, ${a}px`\n        }\n      }\n    })(),\n  }\n\n  return transforms[type]\n}\n\n/**\n * Returns the axis for a CSS function (translate or scale)\n */\nexport function getTransformAxis(str, cssFunction) {\n  const match = str.match(new RegExp(cssFunction + '([XY])'))\n  return match ? match[1] : ''\n}\n\n/**\n * Returns the numbers given to the CSS function\n */\nexport function getTransformNumbers(str, regex) {\n  const match = str.match(regex)\n  return match ? match[1].split(',').map(n => parseFloat(n, 10)) : []\n}\n\n/**\n * Computes the arrow's transform so that it is correct for any placement\n */\nfunction computeArrowTransform(arrow, arrowTransform) {\n  const placement = getPopperPlacement(closest(arrow, Selectors.POPPER))\n  const isVertical = includes(['top', 'bottom'], placement)\n  const isReverse = includes(['right', 'bottom'], placement)\n\n  const matches = {\n    translate: {\n      axis: getTransformAxis(arrowTransform, 'translate'),\n      numbers: getTransformNumbers(\n        arrowTransform,\n        TRANSFORM_NUMBER_RE.translate,\n      ),\n    },\n    scale: {\n      axis: getTransformAxis(arrowTransform, 'scale'),\n      numbers: getTransformNumbers(arrowTransform, TRANSFORM_NUMBER_RE.scale),\n    },\n  }\n\n  const computedTransform = arrowTransform\n    .replace(\n      TRANSFORM_NUMBER_RE.translate,\n      `translate${transformAxisBasedOnPlacement(\n        matches.translate.axis,\n        isVertical,\n      )}(${transformNumbersBasedOnPlacement(\n        'translate',\n        matches.translate.numbers,\n        isVertical,\n        isReverse,\n      )})`,\n    )\n    .replace(\n      TRANSFORM_NUMBER_RE.scale,\n      `scale${transformAxisBasedOnPlacement(\n        matches.scale.axis,\n        isVertical,\n      )}(${transformNumbersBasedOnPlacement(\n        'scale',\n        matches.scale.numbers,\n        isVertical,\n        isReverse,\n      )})`,\n    )\n\n  arrow.style[\n    typeof document.body.style.transform !== 'undefined'\n      ? 'transform'\n      : 'webkitTransform'\n  ] = computedTransform\n}\n\nexport default computeArrowTransform\n","import Popper from 'popper.js'\nimport { supportsTouch, isIE } from './browser'\nimport { isUsingTouch } from './bindGlobalEventListeners'\nimport Defaults, { POPPER_INSTANCE_RELATED_PROPS } from './defaults'\nimport Selectors from './selectors'\nimport {\n  createPopperElement,\n  updatePopperElement,\n  afterPopperPositionUpdates,\n  getChildren,\n  getPopperPlacement,\n  applyTransitionDuration,\n  toggleTransitionEndListener,\n  setVisibilityState,\n  isCursorOutsideInteractiveBorder,\n  getOffsetDistanceInPx,\n} from './popper'\nimport { canReceiveFocus } from './reference'\nimport { validateOptions, evaluateProps } from './props'\nimport computeArrowTransform from './deprecated_computeArrowTransform'\nimport { closest, closestCallback, arrayFrom } from './ponyfills'\nimport {\n  defer,\n  focus,\n  hasOwnProperty,\n  debounce,\n  getValue,\n  getModifier,\n  includes,\n} from './utils'\nimport { PASSIVE } from './constants'\n\nlet idCounter = 1\n\n/**\n * Creates and returns a Tippy object. We're using a closure pattern instead of\n * a class so that the exposed object API is clean without private members\n * prefixed with `_`.\n * @param {Element} reference\n * @param {Object} collectionProps\n * @return {Object} instance\n */\nexport default function createTippy(reference, collectionProps) {\n  const props = evaluateProps(reference, collectionProps)\n\n  // If the reference shouldn't have multiple tippys, return null early\n  if (!props.multiple && reference._tippy) {\n    return null\n  }\n\n  /* ======================= 🔒 Private members 🔒 ======================= */\n  // The popper element's mutation observer\n  let popperMutationObserver = null\n\n  // The last trigger event object that caused the tippy to show\n  let lastTriggerEvent = {}\n\n  // The last mousemove event object created by the document mousemove event\n  let lastMouseMoveEvent = null\n\n  // Timeout created by the show delay\n  let showTimeoutId = 0\n\n  // Timeout created by the hide delay\n  let hideTimeoutId = 0\n\n  // Flag to determine if the tippy is preparing to show due to the show timeout\n  let isPreparingToShow = false\n\n  // The current `transitionend` callback reference\n  let transitionEndListener = () => {}\n\n  // Array of event listeners currently attached to the reference element\n  let listeners = []\n\n  // Flag to determine if the reference was recently programmatically focused\n  let referenceJustProgrammaticallyFocused = false\n\n  // Private onMouseMove handler reference, debounced or not\n  let debouncedOnMouseMove =\n    props.interactiveDebounce > 0\n      ? debounce(onMouseMove, props.interactiveDebounce)\n      : onMouseMove\n\n  /* ======================= 🔑 Public members 🔑 ======================= */\n  // id used for the `aria-describedby` / `aria-labelledby` attribute\n  const id = idCounter++\n\n  // Popper element reference\n  const popper = createPopperElement(id, props)\n\n  // Prevent a tippy with a delay from hiding if the cursor left then returned\n  // before it started hiding\n  popper.addEventListener('mouseenter', event => {\n    if (\n      tip.props.interactive &&\n      tip.state.isVisible &&\n      lastTriggerEvent.type === 'mouseenter'\n    ) {\n      prepareShow(event)\n    }\n  })\n  popper.addEventListener('mouseleave', event => {\n    if (\n      tip.props.interactive &&\n      lastTriggerEvent.type === 'mouseenter' &&\n      tip.props.interactiveDebounce === 0 &&\n      isCursorOutsideInteractiveBorder(\n        getPopperPlacement(popper),\n        popper.getBoundingClientRect(),\n        event,\n        tip.props,\n      )\n    ) {\n      prepareHide()\n    }\n  })\n\n  // Popper element children: { arrow, backdrop, content, tooltip }\n  const popperChildren = getChildren(popper)\n\n  // The state of the tippy\n  const state = {\n    // If the tippy is currently enabled\n    isEnabled: true,\n    // show() invoked, not currently transitioning out\n    isVisible: false,\n    // If the tippy has been destroyed\n    isDestroyed: false,\n    // If the tippy is on the DOM (transitioning out or in)\n    isMounted: false,\n    // show() transition finished\n    isShown: false,\n  }\n\n  // Popper.js instance for the tippy is lazily created\n  const popperInstance = null\n\n  // 🌟 tippy instance\n  const tip = {\n    // properties\n    id,\n    reference,\n    popper,\n    popperChildren,\n    popperInstance,\n    props,\n    state,\n    // methods\n    clearDelayTimeouts,\n    set,\n    setContent,\n    show,\n    hide,\n    enable,\n    disable,\n    destroy,\n  }\n\n  addTriggersToReference()\n\n  reference.addEventListener('click', onReferenceClick)\n\n  if (!props.lazy) {\n    tip.popperInstance = createPopperInstance()\n    tip.popperInstance.disableEventListeners()\n  }\n\n  if (props.showOnInit) {\n    prepareShow()\n  }\n\n  // Ensure the reference element can receive focus (and is not a delegate)\n  if (props.a11y && !props.target && !canReceiveFocus(reference)) {\n    reference.setAttribute('tabindex', '0')\n  }\n\n  // Install shortcuts\n  reference._tippy = tip\n  popper._tippy = tip\n\n  return tip\n\n  /* ======================= 🔒 Private methods 🔒 ======================= */\n  /**\n   * If the reference was clicked, it also receives focus\n   */\n  function onReferenceClick() {\n    defer(() => {\n      referenceJustProgrammaticallyFocused = false\n    })\n  }\n\n  /**\n   * Ensure the popper's position stays correct if its dimensions change. Use\n   * update() over .scheduleUpdate() so there is no 1 frame flash due to\n   * async update\n   */\n  function addMutationObserver() {\n    popperMutationObserver = new MutationObserver(() => {\n      tip.popperInstance.update()\n    })\n    popperMutationObserver.observe(popper, {\n      childList: true,\n      subtree: true,\n      characterData: true,\n    })\n  }\n\n  /**\n   * Positions the virtual reference near the mouse cursor\n   */\n  function positionVirtualReferenceNearCursor(event) {\n    const { clientX, clientY } = (lastMouseMoveEvent = event)\n\n    if (!tip.popperInstance) {\n      return\n    }\n\n    // Ensure virtual reference is padded by 5px to prevent tooltip from\n    // overflowing. Maybe Popper.js issue?\n    const placement = getPopperPlacement(tip.popper)\n    const padding = tip.popperChildren.arrow ? 20 : 5\n    const isVerticalPlacement = includes(['top', 'bottom'], placement)\n    const isHorizontalPlacement = includes(['left', 'right'], placement)\n\n    // Top / left boundary\n    let x = isVerticalPlacement ? Math.max(padding, clientX) : clientX\n    let y = isHorizontalPlacement ? Math.max(padding, clientY) : clientY\n\n    // Bottom / right boundary\n    if (isVerticalPlacement && x > padding) {\n      x = Math.min(clientX, window.innerWidth - padding)\n    }\n    if (isHorizontalPlacement && y > padding) {\n      y = Math.min(clientY, window.innerHeight - padding)\n    }\n\n    const rect = tip.reference.getBoundingClientRect()\n    const { followCursor } = tip.props\n    const isHorizontal = followCursor === 'horizontal'\n    const isVertical = followCursor === 'vertical'\n\n    tip.popperInstance.reference = {\n      getBoundingClientRect: () => ({\n        width: 0,\n        height: 0,\n        top: isHorizontal ? rect.top : y,\n        bottom: isHorizontal ? rect.bottom : y,\n        left: isVertical ? rect.left : x,\n        right: isVertical ? rect.right : x,\n      }),\n      clientWidth: 0,\n      clientHeight: 0,\n    }\n\n    tip.popperInstance.scheduleUpdate()\n\n    if (followCursor === 'initial' && tip.state.isVisible) {\n      removeFollowCursorListener()\n    }\n  }\n\n  /**\n   * Creates the tippy instance for a delegate when it's been triggered\n   */\n  function createDelegateChildTippy(event) {\n    const targetEl = closest(event.target, tip.props.target)\n    if (targetEl && !targetEl._tippy) {\n      createTippy(targetEl, {\n        ...tip.props,\n        target: '',\n        showOnInit: true,\n      })\n      prepareShow(event)\n    }\n  }\n\n  /**\n   * Setup before show() is invoked (delays, etc.)\n   */\n  function prepareShow(event) {\n    clearDelayTimeouts()\n\n    if (tip.state.isVisible) {\n      return\n    }\n\n    // Is a delegate, create an instance for the child target\n    if (tip.props.target) {\n      return createDelegateChildTippy(event)\n    }\n\n    isPreparingToShow = true\n\n    if (tip.props.wait) {\n      return tip.props.wait(tip, event)\n    }\n\n    // If the tooltip has a delay, we need to be listening to the mousemove as\n    // soon as the trigger event is fired, so that it's in the correct position\n    // upon mount.\n    // Edge case: if the tooltip is still mounted, but then prepareShow() is\n    // called, it causes a jump.\n    if (hasFollowCursorBehavior() && !tip.state.isMounted) {\n      document.addEventListener('mousemove', positionVirtualReferenceNearCursor)\n    }\n\n    const delay = getValue(tip.props.delay, 0, Defaults.delay)\n\n    if (delay) {\n      showTimeoutId = setTimeout(() => {\n        show()\n      }, delay)\n    } else {\n      show()\n    }\n  }\n\n  /**\n   * Setup before hide() is invoked (delays, etc.)\n   */\n  function prepareHide() {\n    clearDelayTimeouts()\n\n    if (!tip.state.isVisible) {\n      return removeFollowCursorListener()\n    }\n\n    isPreparingToShow = false\n\n    const delay = getValue(tip.props.delay, 1, Defaults.delay)\n\n    if (delay) {\n      hideTimeoutId = setTimeout(() => {\n        if (tip.state.isVisible) {\n          hide()\n        }\n      }, delay)\n    } else {\n      hide()\n    }\n  }\n\n  /**\n   * Removes the follow cursor listener\n   */\n  function removeFollowCursorListener() {\n    document.removeEventListener(\n      'mousemove',\n      positionVirtualReferenceNearCursor,\n    )\n    lastMouseMoveEvent = null\n  }\n\n  /**\n   * Cleans up old listeners\n   */\n  function cleanupOldMouseListeners() {\n    document.body.removeEventListener('mouseleave', prepareHide)\n    document.removeEventListener('mousemove', debouncedOnMouseMove)\n  }\n\n  /**\n   * Event listener invoked upon trigger\n   */\n  function onTrigger(event) {\n    if (!tip.state.isEnabled || isEventListenerStopped(event)) {\n      return\n    }\n\n    if (!tip.state.isVisible) {\n      lastTriggerEvent = event\n    }\n\n    // Toggle show/hide when clicking click-triggered tooltips\n    if (\n      event.type === 'click' &&\n      tip.props.hideOnClick !== false &&\n      tip.state.isVisible\n    ) {\n      prepareHide()\n    } else {\n      prepareShow(event)\n    }\n  }\n\n  /**\n   * Event listener used for interactive tooltips to detect when they should\n   * hide\n   */\n  function onMouseMove(event) {\n    const referenceTheCursorIsOver = closestCallback(\n      event.target,\n      el => el._tippy,\n    )\n\n    const isCursorOverPopper =\n      closest(event.target, Selectors.POPPER) === tip.popper\n    const isCursorOverReference = referenceTheCursorIsOver === tip.reference\n\n    if (isCursorOverPopper || isCursorOverReference) {\n      return\n    }\n\n    if (\n      isCursorOutsideInteractiveBorder(\n        getPopperPlacement(tip.popper),\n        tip.popper.getBoundingClientRect(),\n        event,\n        tip.props,\n      )\n    ) {\n      cleanupOldMouseListeners()\n      prepareHide()\n    }\n  }\n\n  /**\n   * Event listener invoked upon mouseleave\n   */\n  function onMouseLeave(event) {\n    if (isEventListenerStopped(event)) {\n      return\n    }\n\n    if (tip.props.interactive) {\n      document.body.addEventListener('mouseleave', prepareHide)\n      document.addEventListener('mousemove', debouncedOnMouseMove)\n      return\n    }\n\n    prepareHide()\n  }\n\n  /**\n   * Event listener invoked upon blur\n   */\n  function onBlur(event) {\n    if (event.target !== tip.reference) {\n      return\n    }\n\n    if (tip.props.interactive) {\n      if (!event.relatedTarget) {\n        return\n      }\n      if (closest(event.relatedTarget, Selectors.POPPER)) {\n        return\n      }\n    }\n\n    prepareHide()\n  }\n\n  /**\n   * Event listener invoked when a child target is triggered\n   */\n  function onDelegateShow(event) {\n    if (closest(event.target, tip.props.target)) {\n      prepareShow(event)\n    }\n  }\n\n  /**\n   * Event listener invoked when a child target should hide\n   */\n  function onDelegateHide(event) {\n    if (closest(event.target, tip.props.target)) {\n      prepareHide()\n    }\n  }\n\n  /**\n   * Determines if an event listener should stop further execution due to the\n   * `touchHold` option\n   */\n  function isEventListenerStopped(event) {\n    const isTouchEvent = includes(event.type, 'touch')\n    const caseA =\n      supportsTouch && isUsingTouch && tip.props.touchHold && !isTouchEvent\n    const caseB = isUsingTouch && !tip.props.touchHold && isTouchEvent\n    return caseA || caseB\n  }\n\n  /**\n   * Creates the popper instance for the tip\n   */\n  function createPopperInstance() {\n    const { popperOptions } = tip.props\n    const { tooltip, arrow } = tip.popperChildren\n\n    return new Popper(tip.reference, tip.popper, {\n      placement: tip.props.placement,\n      ...popperOptions,\n      modifiers: {\n        ...(popperOptions ? popperOptions.modifiers : {}),\n        preventOverflow: {\n          boundariesElement: tip.props.boundary,\n          ...getModifier(popperOptions, 'preventOverflow'),\n        },\n        arrow: {\n          element: arrow,\n          enabled: !!arrow,\n          ...getModifier(popperOptions, 'arrow'),\n        },\n        flip: {\n          enabled: tip.props.flip,\n          padding: tip.props.distance + 5 /* 5px from viewport boundary */,\n          behavior: tip.props.flipBehavior,\n          ...getModifier(popperOptions, 'flip'),\n        },\n        offset: {\n          offset: tip.props.offset,\n          ...getModifier(popperOptions, 'offset'),\n        },\n      },\n      onCreate() {\n        tooltip.style[getPopperPlacement(tip.popper)] = getOffsetDistanceInPx(\n          tip.props.distance,\n          Defaults.distance,\n        )\n\n        if (arrow && tip.props.arrowTransform) {\n          computeArrowTransform(arrow, tip.props.arrowTransform)\n        }\n      },\n      onUpdate() {\n        const styles = tooltip.style\n        styles.top = ''\n        styles.bottom = ''\n        styles.left = ''\n        styles.right = ''\n        styles[getPopperPlacement(tip.popper)] = getOffsetDistanceInPx(\n          tip.props.distance,\n          Defaults.distance,\n        )\n\n        if (arrow && tip.props.arrowTransform) {\n          computeArrowTransform(arrow, tip.props.arrowTransform)\n        }\n      },\n    })\n  }\n\n  /**\n   * Mounts the tooltip to the DOM, callback to show tooltip is run **after**\n   * popper's position has updated\n   */\n  function mount(callback) {\n    if (!tip.popperInstance) {\n      tip.popperInstance = createPopperInstance()\n      addMutationObserver()\n      if (!tip.props.livePlacement || hasFollowCursorBehavior()) {\n        tip.popperInstance.disableEventListeners()\n      }\n    } else {\n      if (!hasFollowCursorBehavior()) {\n        tip.popperInstance.scheduleUpdate()\n        if (tip.props.livePlacement) {\n          tip.popperInstance.enableEventListeners()\n        }\n      }\n    }\n\n    // If the instance previously had followCursor behavior, it will be\n    // positioned incorrectly if triggered by `focus` afterwards.\n    // Update the reference back to the real DOM element\n    tip.popperInstance.reference = tip.reference\n    const { arrow } = tip.popperChildren\n\n    if (hasFollowCursorBehavior()) {\n      if (arrow) {\n        arrow.style.margin = '0'\n      }\n      const delay = getValue(tip.props.delay, 0, Defaults.delay)\n      if (lastTriggerEvent.type) {\n        positionVirtualReferenceNearCursor(\n          delay && lastMouseMoveEvent ? lastMouseMoveEvent : lastTriggerEvent,\n        )\n      }\n    } else if (arrow) {\n      arrow.style.margin = ''\n    }\n\n    afterPopperPositionUpdates(tip.popperInstance, callback)\n\n    if (!tip.props.appendTo.contains(tip.popper)) {\n      tip.props.appendTo.appendChild(tip.popper)\n      tip.props.onMount(tip)\n      tip.state.isMounted = true\n    }\n  }\n\n  /**\n   * Determines if the instance is in `followCursor` mode\n   */\n  function hasFollowCursorBehavior() {\n    return (\n      tip.props.followCursor &&\n      !isUsingTouch &&\n      lastTriggerEvent.type !== 'focus'\n    )\n  }\n\n  /**\n   * Updates the tooltip's position on each animation frame + timeout\n   */\n  function makeSticky() {\n    applyTransitionDuration([tip.popper], isIE ? 0 : tip.props.updateDuration)\n\n    const updatePosition = () => {\n      if (tip.popperInstance) {\n        tip.popperInstance.scheduleUpdate()\n      }\n\n      if (tip.state.isMounted) {\n        requestAnimationFrame(updatePosition)\n      } else {\n        applyTransitionDuration([tip.popper], 0)\n      }\n    }\n\n    updatePosition()\n  }\n\n  /**\n   * Invokes a callback once the tooltip has fully transitioned out\n   */\n  function onTransitionedOut(duration, callback) {\n    onTransitionEnd(duration, () => {\n      if (!tip.state.isVisible && tip.props.appendTo.contains(tip.popper)) {\n        callback()\n      }\n    })\n  }\n\n  /**\n   * Invokes a callback once the tooltip has fully transitioned in\n   */\n  function onTransitionedIn(duration, callback) {\n    onTransitionEnd(duration, callback)\n  }\n\n  /**\n   * Invokes a callback once the tooltip's CSS transition ends\n   */\n  function onTransitionEnd(duration, callback) {\n    // Make callback synchronous if duration is 0\n    if (duration === 0) {\n      return callback()\n    }\n\n    const { tooltip } = tip.popperChildren\n\n    const listener = e => {\n      if (e.target === tooltip) {\n        toggleTransitionEndListener(tooltip, 'remove', listener)\n        callback()\n      }\n    }\n\n    toggleTransitionEndListener(tooltip, 'remove', transitionEndListener)\n    toggleTransitionEndListener(tooltip, 'add', listener)\n\n    transitionEndListener = listener\n  }\n\n  /**\n   * Adds an event listener to the reference and stores it in `listeners`\n   */\n  function on(eventType, handler, options = false) {\n    tip.reference.addEventListener(eventType, handler, options)\n    listeners.push({ eventType, handler, options })\n  }\n\n  /**\n   * Adds event listeners to the reference based on the `trigger` prop\n   */\n  function addTriggersToReference() {\n    if (tip.props.touchHold && !tip.props.target) {\n      on('touchstart', onTrigger, PASSIVE)\n      on('touchend', onMouseLeave, PASSIVE)\n    }\n\n    tip.props.trigger\n      .trim()\n      .split(' ')\n      .forEach(eventType => {\n        if (eventType === 'manual') {\n          return\n        }\n\n        if (!tip.props.target) {\n          on(eventType, onTrigger)\n          switch (eventType) {\n            case 'mouseenter':\n              on('mouseleave', onMouseLeave)\n              break\n            case 'focus':\n              on(isIE ? 'focusout' : 'blur', onBlur)\n              break\n          }\n        } else {\n          switch (eventType) {\n            case 'mouseenter':\n              on('mouseover', onDelegateShow)\n              on('mouseout', onDelegateHide)\n              break\n            case 'focus':\n              on('focusin', onDelegateShow)\n              on('focusout', onDelegateHide)\n              break\n            case 'click':\n              on(eventType, onDelegateShow)\n              break\n          }\n        }\n      })\n  }\n\n  /**\n   * Removes event listeners from the reference\n   */\n  function removeTriggersFromReference() {\n    listeners.forEach(({ eventType, handler, options }) => {\n      tip.reference.removeEventListener(eventType, handler, options)\n    })\n    listeners = []\n  }\n\n  /* ======================= 🔑 Public methods 🔑 ======================= */\n  /**\n   * Enables the instance to allow it to show or hide\n   */\n  function enable() {\n    tip.state.isEnabled = true\n  }\n\n  /**\n   * Disables the instance to disallow it to show or hide\n   */\n  function disable() {\n    tip.state.isEnabled = false\n  }\n\n  /**\n   * Clears pending timeouts related to the `delay` prop if any\n   */\n  function clearDelayTimeouts() {\n    clearTimeout(showTimeoutId)\n    clearTimeout(hideTimeoutId)\n  }\n\n  /**\n   * Sets new props for the instance and redraws the tooltip\n   */\n  function set(options = {}) {\n    validateOptions(options, Defaults)\n\n    const prevProps = tip.props\n    const nextProps = evaluateProps(tip.reference, {\n      ...tip.props,\n      ...options,\n      performance: true,\n    })\n    nextProps.performance = hasOwnProperty(options, 'performance')\n      ? options.performance\n      : prevProps.performance\n    tip.props = nextProps\n\n    if (\n      hasOwnProperty(options, 'trigger') ||\n      hasOwnProperty(options, 'touchHold')\n    ) {\n      removeTriggersFromReference()\n      addTriggersToReference()\n    }\n\n    if (hasOwnProperty(options, 'interactiveDebounce')) {\n      cleanupOldMouseListeners()\n      debouncedOnMouseMove = debounce(onMouseMove, options.interactiveDebounce)\n    }\n\n    updatePopperElement(tip.popper, prevProps, nextProps)\n    tip.popperChildren = getChildren(tip.popper)\n\n    if (\n      tip.popperInstance &&\n      POPPER_INSTANCE_RELATED_PROPS.some(prop => hasOwnProperty(options, prop))\n    ) {\n      tip.popperInstance.destroy()\n      tip.popperInstance = createPopperInstance()\n      if (!tip.state.isVisible) {\n        tip.popperInstance.disableEventListeners()\n      }\n      if (tip.props.followCursor && lastMouseMoveEvent) {\n        positionVirtualReferenceNearCursor(lastMouseMoveEvent)\n      }\n    }\n  }\n\n  /**\n   * Shortcut for .set({ content: newContent })\n   */\n  function setContent(content) {\n    set({ content })\n  }\n\n  /**\n   * Shows the tooltip\n   */\n  function show(\n    duration = getValue(tip.props.duration, 0, Defaults.duration[0]),\n  ) {\n    if (\n      tip.state.isDestroyed ||\n      !tip.state.isEnabled ||\n      (isUsingTouch && !tip.props.touch)\n    ) {\n      return\n    }\n\n    // Destroy tooltip if the reference element is no longer on the DOM\n    if (\n      !tip.reference.isVirtual &&\n      !document.documentElement.contains(tip.reference)\n    ) {\n      return destroy()\n    }\n\n    // Do not show tooltip if the reference element has a `disabled` attribute\n    if (tip.reference.hasAttribute('disabled')) {\n      return\n    }\n\n    // If the reference was just programmatically focused for accessibility\n    // reasons\n    if (referenceJustProgrammaticallyFocused) {\n      referenceJustProgrammaticallyFocused = false\n      return\n    }\n\n    if (tip.props.onShow(tip) === false) {\n      return\n    }\n\n    tip.popper.style.visibility = 'visible'\n    tip.state.isVisible = true\n\n    // Prevent a transition if the popper is at the opposite placement\n    applyTransitionDuration(\n      [tip.popper, tip.popperChildren.tooltip, tip.popperChildren.backdrop],\n      0,\n    )\n\n    mount(() => {\n      if (!tip.state.isVisible) {\n        return\n      }\n\n      // Arrow will sometimes not be positioned correctly. Force another update\n      if (!hasFollowCursorBehavior()) {\n        tip.popperInstance.update()\n      }\n\n      applyTransitionDuration(\n        [\n          tip.popperChildren.tooltip,\n          tip.popperChildren.backdrop,\n          tip.popperChildren.content,\n        ],\n        duration,\n      )\n      if (tip.popperChildren.backdrop) {\n        tip.popperChildren.content.style.transitionDelay =\n          Math.round(duration / 6) + 'ms'\n      }\n\n      if (tip.props.interactive) {\n        tip.reference.classList.add('tippy-active')\n      }\n\n      if (tip.props.sticky) {\n        makeSticky()\n      }\n\n      setVisibilityState(\n        [\n          tip.popperChildren.tooltip,\n          tip.popperChildren.backdrop,\n          tip.popperChildren.content,\n        ],\n        'visible',\n      )\n\n      onTransitionedIn(duration, () => {\n        if (tip.props.updateDuration === 0) {\n          tip.popperChildren.tooltip.classList.add('tippy-notransition')\n        }\n\n        if (\n          tip.props.autoFocus &&\n          tip.props.interactive &&\n          includes(['focus', 'click'], lastTriggerEvent.type)\n        ) {\n          focus(tip.popper)\n        }\n\n        if (tip.props.aria) {\n          tip.reference.setAttribute(`aria-${tip.props.aria}`, tip.popper.id)\n        }\n\n        tip.props.onShown(tip)\n        tip.state.isShown = true\n      })\n    })\n  }\n\n  /**\n   * Hides the tooltip\n   */\n  function hide(\n    duration = getValue(tip.props.duration, 1, Defaults.duration[1]),\n  ) {\n    if (tip.state.isDestroyed || !tip.state.isEnabled) {\n      return\n    }\n\n    if (tip.props.onHide(tip) === false) {\n      return\n    }\n\n    if (tip.props.updateDuration === 0) {\n      tip.popperChildren.tooltip.classList.remove('tippy-notransition')\n    }\n\n    if (tip.props.interactive) {\n      tip.reference.classList.remove('tippy-active')\n    }\n\n    tip.popper.style.visibility = 'hidden'\n    tip.state.isVisible = false\n    tip.state.isShown = false\n\n    applyTransitionDuration(\n      [\n        tip.popperChildren.tooltip,\n        tip.popperChildren.backdrop,\n        tip.popperChildren.content,\n      ],\n      duration,\n    )\n\n    setVisibilityState(\n      [\n        tip.popperChildren.tooltip,\n        tip.popperChildren.backdrop,\n        tip.popperChildren.content,\n      ],\n      'hidden',\n    )\n\n    if (\n      tip.props.autoFocus &&\n      tip.props.interactive &&\n      !referenceJustProgrammaticallyFocused &&\n      includes(['focus', 'click'], lastTriggerEvent.type)\n    ) {\n      if (lastTriggerEvent.type === 'focus') {\n        referenceJustProgrammaticallyFocused = true\n      }\n      focus(tip.reference)\n    }\n\n    onTransitionedOut(duration, () => {\n      if (!isPreparingToShow) {\n        removeFollowCursorListener()\n      }\n\n      if (tip.props.aria) {\n        tip.reference.removeAttribute(`aria-${tip.props.aria}`)\n      }\n\n      tip.popperInstance.disableEventListeners()\n\n      tip.props.appendTo.removeChild(tip.popper)\n      tip.state.isMounted = false\n\n      tip.props.onHidden(tip)\n    })\n  }\n\n  /**\n   * Destroys the tooltip\n   */\n  function destroy(destroyTargetInstances) {\n    if (tip.state.isDestroyed) {\n      return\n    }\n\n    // If the popper is currently mounted to the DOM, we want to ensure it gets\n    // hidden and unmounted instantly upon destruction\n    if (tip.state.isMounted) {\n      hide(0)\n    }\n\n    removeTriggersFromReference()\n\n    tip.reference.removeEventListener('click', onReferenceClick)\n\n    delete tip.reference._tippy\n\n    if (tip.props.target && destroyTargetInstances) {\n      arrayFrom(tip.reference.querySelectorAll(tip.props.target)).forEach(\n        child => child._tippy && child._tippy.destroy(),\n      )\n    }\n\n    if (tip.popperInstance) {\n      tip.popperInstance.destroy()\n    }\n\n    if (popperMutationObserver) {\n      popperMutationObserver.disconnect()\n    }\n\n    tip.state.isDestroyed = true\n  }\n}\n","import aboutmeSvg from \"./svg/back.svg\";\n\nexport default () => {\n    const aboutmeIconContainer = document.querySelector(\n      \"#icon-back\"\n      );\n;\n  aboutmeIconContainer.innerHTML = aboutmeSvg;\n\n};\n\n\n","export default () => {\n  const outboundLinks = document.querySelectorAll(\".link\");\n\n  outboundLinks.forEach(link => {\n    link.addEventListener(\"click\", () => {\n      const outboundLink = link.getAttribute(\"data-href\");\n\n      window.open(outboundLink, \"_self\");\n    });\n  });\n};\n","import \"tippy.js\";\nimport setupSvg from \"./src/setupAboutSvg\";\nimport setupAboutLinks from \"./src/setupAboutLinks\";\n\nimport \"normalize.css\";\nimport \"tippy.js/dist/tippy.css\";\nimport \"./styles.css\";\n\nsetupSvg();\nsetupAboutLinks();"]}